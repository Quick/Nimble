{
  "abstract" : [
    {
      "text" : "Allows you to temporarily replace the current Nimble assertion handler with",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the one provided for the scope of the closure.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Nimble\/documentation\/Nimble"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Nimble\/documentation\/Nimble\/withAssertionHandler(_:fileID:file:line:column:closure:)-5m4st"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:6Nimble20withAssertionHandler_6fileID0E04line6column7closureyAA0cD0_p_SSs12StaticStringVS2uyyKXEtF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "withAssertionHandler"
      },
      {
        "kind" : "text",
        "text" : "(any "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:6Nimble16AssertionHandlerP",
        "text" : "AssertionHandler"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "fileID"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "file"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:6Nimble10FileStringa",
        "text" : "FileString"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "line"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Su",
        "text" : "UInt"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "column"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Su",
        "text" : "UInt"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "closure"
      },
      {
        "kind" : "text",
        "text" : ": () "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      },
      {
        "kind" : "text",
        "text" : " -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s4Voida",
        "text" : "Void"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "modules" : [
      {
        "name" : "Nimble"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Function",
    "symbolKind" : "func",
    "title" : "withAssertionHandler(_:fileID:file:line:column:closure:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "withAssertionHandler"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "tempAssertionHandler"
            },
            {
              "kind" : "text",
              "text" : ": any "
            },
            {
              "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AssertionHandler",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:6Nimble16AssertionHandlerP",
              "text" : "AssertionHandler"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "fileID"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SS",
              "text" : "String"
            },
            {
              "kind" : "text",
              "text" : " = "
            },
            {
              "kind" : "keyword",
              "text" : "#fileID"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "file"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/FileString",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:6Nimble10FileStringa",
              "text" : "FileString"
            },
            {
              "kind" : "text",
              "text" : " = "
            },
            {
              "kind" : "keyword",
              "text" : "#filePath"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "line"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Su",
              "text" : "UInt"
            },
            {
              "kind" : "text",
              "text" : " = "
            },
            {
              "kind" : "keyword",
              "text" : "#line"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "column"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Su",
              "text" : "UInt"
            },
            {
              "kind" : "text",
              "text" : " = "
            },
            {
              "kind" : "keyword",
              "text" : "#column"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "closure"
            },
            {
              "kind" : "text",
              "text" : ": () "
            },
            {
              "kind" : "keyword",
              "text" : "throws"
            },
            {
              "kind" : "text",
              "text" : " -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s4Voida",
              "text" : "Void"
            },
            {
              "kind" : "text",
              "text" : ")"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This form of ",
              "type" : "text"
            },
            {
              "code" : "withAssertionHandler",
              "type" : "codeVoice"
            },
            {
              "text" : " does not work in any kind of",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "async context. Use the async form of ",
              "type" : "text"
            },
            {
              "code" : "withAssertionHandler",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "if you are running tests in an async context.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Once the closure finishes, then the original Nimble assertion handler is restored.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nimble\/withassertionhandler(_:fileid:file:line:column:closure:)-5m4st"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Nimble/documentation/Nimble": {
  "abstract" : [
    {
      "inlineContent" : [
        {
          "text" : "Nimble",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " is a testing framework for verifying the outcomes and Swift or Objective-C expressions.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Nimble",
  "type" : "topic",
  "url" : "\/documentation\/nimble"
},
"doc://Nimble/documentation/Nimble/AssertionHandler": {
  "abstract" : [
    {
      "text" : "Protocol for the assertion handler that Nimble uses for all expectations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AssertionHandler"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AssertionHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AssertionHandler"
    }
  ],
  "role" : "symbol",
  "title" : "AssertionHandler",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/assertionhandler"
},
"doc://Nimble/documentation/Nimble/FileString": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FileString"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/FileString",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FileString"
    }
  ],
  "role" : "symbol",
  "title" : "FileString",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/filestring"
},
"doc://Nimble/documentation/Nimble/withAssertionHandler(_:fileID:file:line:column:closure:)-5m4st": {
  "abstract" : [
    {
      "text" : "Allows you to temporarily replace the current Nimble assertion handler with",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the one provided for the scope of the closure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withAssertionHandler"
    },
    {
      "kind" : "text",
      "text" : "(any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AssertionHandlerP",
      "text" : "AssertionHandler"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "closure"
    },
    {
      "kind" : "text",
      "text" : ": () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/withAssertionHandler(_:fileID:file:line:column:closure:)-5m4st",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withAssertionHandler(_:fileID:file:line:column:closure:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/withassertionhandler(_:fileid:file:line:column:closure:)-5m4st"
}
}
}