{
  "abstract" : [
    {
      "inlineContent" : [
        {
          "text" : "Nimble",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " is a testing framework for verifying the outcomes and Swift or Objective-C expressions.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [

      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Nimble\/documentation\/Nimble"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "Nimble",
    "modules" : [
      {
        "name" : "Nimble"
      }
    ],
    "role" : "collection",
    "roleHeading" : "Framework",
    "symbolKind" : "module",
    "title" : "Nimble"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Nimble provides 4 things:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "A way to verify expressions using a natural, easily understood language.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "inlineContent" : [
                        {
                          "text" : "Matchers",
                          "type" : "text"
                        }
                      ],
                      "type" : "strong"
                    },
                    {
                      "text" : ", or functions to check the Behavior of an expression.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Means of requiring an ",
                      "type" : "text"
                    },
                    {
                      "inlineContent" : [
                        {
                          "text" : "Expectation",
                          "type" : "text"
                        }
                      ],
                      "type" : "strong"
                    },
                    {
                      "text" : " - an expression-matcher combination - to pass before continuing.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "A way to check expressions that change over time.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "anchor" : "Terms",
          "level" : 2,
          "text" : "Terms",
          "type" : "heading"
        },
        {
          "items" : [
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "A Swift or Objective-C bit of code. For example ",
                        "type" : "text"
                      },
                      {
                        "code" : "1 + 1",
                        "type" : "codeVoice"
                      },
                      {
                        "text" : ".",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "text" : "Expression",
                    "type" : "text"
                  }
                ]
              }
            },
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "A result or side effect of an expression. For example ",
                        "type" : "text"
                      },
                      {
                        "code" : "print(\"hello\")",
                        "type" : "codeVoice"
                      },
                      {
                        "text" : " has a behavior of writing “hello\\n” to standard output, while ",
                        "type" : "text"
                      },
                      {
                        "code" : "1 + 1",
                        "type" : "codeVoice"
                      },
                      {
                        "text" : " has a behavior of returning 2.",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "text" : "Behavior",
                    "type" : "text"
                  }
                ]
              }
            },
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "A function from Nimble which checks an Expression’s Behavior.",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "text" : "Matcher",
                    "type" : "text"
                  }
                ]
              }
            },
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "An Expression combined with an Expression. For example, ",
                        "type" : "text"
                      },
                      {
                        "code" : "expect(1 + 1).to(equal(2))",
                        "type" : "codeVoice"
                      },
                      {
                        "text" : " is an Expectation.",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "text" : "Expectation",
                    "type" : "text"
                  }
                ]
              }
            },
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "An expectation that is continuously polled until it finishes.",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "text" : "Polling Expectation",
                    "type" : "text"
                  }
                ]
              }
            },
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "An Expectation that must pass before continuing. These are usually defined using ",
                        "type" : "text"
                      },
                      {
                        "code" : "require",
                        "type" : "codeVoice"
                      },
                      {
                        "text" : " instead of ",
                        "type" : "text"
                      },
                      {
                        "code" : "expect",
                        "type" : "codeVoice"
                      },
                      {
                        "text" : ", though there are shortcuts such as ",
                        "type" : "text"
                      },
                      {
                        "code" : "unwrap(file:line:customError:_:)-5q9f3",
                        "type" : "codeVoice"
                      },
                      {
                        "text" : " and ",
                        "type" : "text"
                      },
                      {
                        "code" : "pollUnwrap(file:line:_:)-4ddnp",
                        "type" : "codeVoice"
                      },
                      {
                        "text" : ".",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "text" : "Requirement",
                    "type" : "text"
                  }
                ]
              }
            }
          ],
          "type" : "termList"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/Nimble\/documentation\/Nimble\/Background",
        "doc:\/\/Nimble\/documentation\/Nimble\/Expectations",
        "doc:\/\/Nimble\/documentation\/Nimble\/Concurrency",
        "doc:\/\/Nimble\/documentation\/Nimble\/PollingExpectations",
        "doc:\/\/Nimble\/documentation\/Nimble\/ObjectiveC",
        "doc:\/\/Nimble\/documentation\/Nimble\/Require",
        "doc:\/\/Nimble\/documentation\/Nimble\/WritingCustomMatchers"
      ],
      "title" : "Guides"
    },
    {
      "abstract" : [
        {
          "text" : "Nimble includes a wide variety of matcher functions.",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/Nimble\/documentation\/Nimble\/TypeChecking",
        "doc:\/\/Nimble\/documentation\/Nimble\/Equivalence",
        "doc:\/\/Nimble\/documentation\/Nimble\/Identity",
        "doc:\/\/Nimble\/documentation\/Nimble\/Comparisons",
        "doc:\/\/Nimble\/documentation\/Nimble\/Truthiness",
        "doc:\/\/Nimble\/documentation\/Nimble\/SwiftAssertions",
        "doc:\/\/Nimble\/documentation\/Nimble\/SwiftErrors",
        "doc:\/\/Nimble\/documentation\/Nimble\/Exceptions",
        "doc:\/\/Nimble\/documentation\/Nimble\/Strings",
        "doc:\/\/Nimble\/documentation\/Nimble\/Notifications",
        "doc:\/\/Nimble\/documentation\/Nimble\/Result",
        "doc:\/\/Nimble\/documentation\/Nimble\/GroupsOfMatchers",
        "doc:\/\/Nimble\/documentation\/Nimble\/CustomValidation",
        "doc:\/\/Nimble\/documentation\/Nimble\/Map",
        "doc:\/\/Nimble\/documentation\/Nimble\/Collections"
      ],
      "title" : "Matchers"
    },
    {
      "identifiers" : [
        "doc:\/\/Nimble\/documentation\/Nimble\/AssertionDispatcher",
        "doc:\/\/Nimble\/documentation\/Nimble\/AssertionRecorder",
        "doc:\/\/Nimble\/documentation\/Nimble\/BadInstructionException",
        "doc:\/\/Nimble\/documentation\/Nimble\/FailureMessage",
        "doc:\/\/Nimble\/documentation\/Nimble\/NMBWait",
        "doc:\/\/Nimble\/documentation\/Nimble\/NimbleShortXCTestHandler",
        "doc:\/\/Nimble\/documentation\/Nimble\/NimbleSwiftTestingHandler",
        "doc:\/\/Nimble\/documentation\/Nimble\/NimbleTestingHandler",
        "doc:\/\/Nimble\/documentation\/Nimble\/NimbleXCTestHandler",
        "doc:\/\/Nimble\/documentation\/Nimble\/SourceLocation"
      ],
      "title" : "Classes"
    },
    {
      "identifiers" : [
        "doc:\/\/Nimble\/documentation\/Nimble\/AssertionHandler",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncableMatcher",
        "doc:\/\/Nimble\/documentation\/Nimble\/Expectation",
        "doc:\/\/Nimble\/documentation\/Nimble\/NMBCollection",
        "doc:\/\/Nimble\/documentation\/Nimble\/NMBContainer",
        "doc:\/\/Nimble\/documentation\/Nimble\/NMBDoubleConvertible",
        "doc:\/\/Nimble\/documentation\/Nimble\/NMBOrderedCollection",
        "doc:\/\/Nimble\/documentation\/Nimble\/TestOutputStringConvertible"
      ],
      "title" : "Protocols"
    },
    {
      "identifiers" : [
        "doc:\/\/Nimble\/documentation\/Nimble\/AssertionRecord",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpectation",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpression",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncMatcher",
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement",
        "doc:\/\/Nimble\/documentation\/Nimble\/ExpectationNil",
        "doc:\/\/Nimble\/documentation\/Nimble\/Expression",
        "doc:\/\/Nimble\/documentation\/Nimble\/Matcher",
        "doc:\/\/Nimble\/documentation\/Nimble\/MatcherResult",
        "doc:\/\/Nimble\/documentation\/Nimble\/PollingDefaults",
        "doc:\/\/Nimble\/documentation\/Nimble\/RequireError",
        "doc:\/\/Nimble\/documentation\/Nimble\/SyncExpectation",
        "doc:\/\/Nimble\/documentation\/Nimble\/SyncRequirement"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/Nimble\/documentation\/Nimble\/DefaultDelta",
        "doc:\/\/Nimble\/documentation\/Nimble\/NimbleAssertionHandler"
      ],
      "title" : "Variables"
    },
    {
      "identifiers" : [
        "doc:\/\/Nimble\/documentation\/Nimble\/allPass(_:)-2jexg",
        "doc:\/\/Nimble\/documentation\/Nimble\/allPass(_:)-5avdc",
        "doc:\/\/Nimble\/documentation\/Nimble\/allPass(_:)-6q6j5",
        "doc:\/\/Nimble\/documentation\/Nimble\/allPass(_:)-9i1yo",
        "doc:\/\/Nimble\/documentation\/Nimble\/allPass(_:_:)-3kwct",
        "doc:\/\/Nimble\/documentation\/Nimble\/allPass(_:_:)-59vkt",
        "doc:\/\/Nimble\/documentation\/Nimble\/be(_:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/beAKindOf(_:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/beAnInstanceOf(_:)-25vd8",
        "doc:\/\/Nimble\/documentation\/Nimble\/beAnInstanceOf(_:)-3m1ll",
        "doc:\/\/Nimble\/documentation\/Nimble\/beCloseTo(_:within:)-1penf",
        "doc:\/\/Nimble\/documentation\/Nimble\/beCloseTo(_:within:)-2ekge",
        "doc:\/\/Nimble\/documentation\/Nimble\/beCloseTo(_:within:)-8goy6",
        "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-1phtu",
        "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-2dmdf",
        "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-4tk26",
        "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-5ybqq",
        "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-6mkht",
        "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-8xbp2",
        "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-8zwdh",
        "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-9y5jr",
        "doc:\/\/Nimble\/documentation\/Nimble\/beFailure(_:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/beFailure(test:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/beFalse()",
        "doc:\/\/Nimble\/documentation\/Nimble\/beFalsy()",
        "doc:\/\/Nimble\/documentation\/Nimble\/beGreaterThan(_:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/beGreaterThanOrEqualTo(_:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/beIdenticalTo(_:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/beLessThan(_:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/beLessThanOrEqualTo(_:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/beNil()",
        "doc:\/\/Nimble\/documentation\/Nimble\/beSuccess(_:)-444ip",
        "doc:\/\/Nimble\/documentation\/Nimble\/beSuccess(_:)-6l09y",
        "doc:\/\/Nimble\/documentation\/Nimble\/beSuccess(test:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/beTrue()",
        "doc:\/\/Nimble\/documentation\/Nimble\/beTruthy()",
        "doc:\/\/Nimble\/documentation\/Nimble\/beVoid()",
        "doc:\/\/Nimble\/documentation\/Nimble\/beWithin(_:)-33vbq",
        "doc:\/\/Nimble\/documentation\/Nimble\/beWithin(_:)-9cwl3",
        "doc:\/\/Nimble\/documentation\/Nimble\/beginWith(_:)-1owm0",
        "doc:\/\/Nimble\/documentation\/Nimble\/beginWith(_:)-24tjb",
        "doc:\/\/Nimble\/documentation\/Nimble\/beginWith(_:)-25593",
        "doc:\/\/Nimble\/documentation\/Nimble\/beginWith(prefix:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/beginWith(prefix:by:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/catchBadInstruction(block:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-2aowy",
        "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-3rklc",
        "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-41z5g",
        "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-78pt3",
        "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-862bt",
        "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-8fxbb",
        "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-8sjnq",
        "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-dgf4",
        "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-h8gp",
        "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-owbf",
        "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-vjep",
        "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-wfmf",
        "doc:\/\/Nimble\/documentation\/Nimble\/containElementSatisfying(_:_:)-44wi3",
        "doc:\/\/Nimble\/documentation\/Nimble\/containElementSatisfying(_:_:)-8omf3",
        "doc:\/\/Nimble\/documentation\/Nimble\/defaultDelta()",
        "doc:\/\/Nimble\/documentation\/Nimble\/elementsEqual(_:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/elementsEqual(_:by:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/endWith(_:)-20hcx",
        "doc:\/\/Nimble\/documentation\/Nimble\/endWith(_:)-4n6y3",
        "doc:\/\/Nimble\/documentation\/Nimble\/endWith(_:)-6f0ul",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-1jkdb",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-29m3q",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-2k2k5",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-4jb77",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-4uzmz",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-4vzd2",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-4w4xq",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-4zxpx",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-5fne6",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-63nh8",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-6p8q5",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-6ymip",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-7j9dn",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-95y6m",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-96tj4",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-9l2si",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-fpzg",
        "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-t0mf",
        "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-2csqt",
        "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-38guh",
        "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-3g2l0",
        "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-6jipk",
        "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-7mlr2",
        "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-7npqm",
        "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-7yk0h",
        "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-kv1j",
        "doc:\/\/Nimble\/documentation\/Nimble\/expecta(fileID:file:line:column:_:)-1uq4t",
        "doc:\/\/Nimble\/documentation\/Nimble\/expecta(fileID:file:line:column:_:)-2qkcj",
        "doc:\/\/Nimble\/documentation\/Nimble\/expecta(fileID:file:line:column:_:)-93s8c",
        "doc:\/\/Nimble\/documentation\/Nimble\/expecta(fileID:file:line:column:_:)-vzn5",
        "doc:\/\/Nimble\/documentation\/Nimble\/expects(fileID:file:line:column:_:)-223fj",
        "doc:\/\/Nimble\/documentation\/Nimble\/expects(fileID:file:line:column:_:)-3mc9y",
        "doc:\/\/Nimble\/documentation\/Nimble\/expects(fileID:file:line:column:_:)-3v8dw",
        "doc:\/\/Nimble\/documentation\/Nimble\/expects(fileID:file:line:column:_:)-xhbq",
        "doc:\/\/Nimble\/documentation\/Nimble\/fail(_:fileID:file:line:column:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/fail(_:location:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/fail(fileID:file:line:column:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/gatherExpectations(silently:closure:)-2po6t",
        "doc:\/\/Nimble\/documentation\/Nimble\/gatherExpectations(silently:closure:)-75ohy",
        "doc:\/\/Nimble\/documentation\/Nimble\/gatherFailingExpectations(silently:closure:)-2g14s",
        "doc:\/\/Nimble\/documentation\/Nimble\/gatherFailingExpectations(silently:closure:)-30gyn",
        "doc:\/\/Nimble\/documentation\/Nimble\/haveCount(_:)-5t6dt",
        "doc:\/\/Nimble\/documentation\/Nimble\/haveCount(_:)-d79t",
        "doc:\/\/Nimble\/documentation\/Nimble\/map(_:_:)-5l17g",
        "doc:\/\/Nimble\/documentation\/Nimble\/map(_:_:)-6ykjm",
        "doc:\/\/Nimble\/documentation\/Nimble\/match(_:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/matchError(_:)-4geex",
        "doc:\/\/Nimble\/documentation\/Nimble\/matchError(_:)-6jywp",
        "doc:\/\/Nimble\/documentation\/Nimble\/matchError(_:)-8o974",
        "doc:\/\/Nimble\/documentation\/Nimble\/not(_:)-373ex",
        "doc:\/\/Nimble\/documentation\/Nimble\/not(_:)-76gnj",
        "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwrap(file:line:_:)-16s5w",
        "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwrap(file:line:_:)-3fmx1",
        "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwrap(file:line:_:)-3yd3y",
        "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwrap(file:line:_:)-60bfs",
        "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwrapa(file:line:_:)-2vokl",
        "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwrapa(file:line:_:)-5jamj",
        "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwraps(file:line:_:)-3jrcn",
        "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwraps(file:line:_:)-52c5x",
        "doc:\/\/Nimble\/documentation\/Nimble\/postNotifications(_:from:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/prettyCollectionType(_:)-3wxmq",
        "doc:\/\/Nimble\/documentation\/Nimble\/prettyCollectionType(_:)-8eo0q",
        "doc:\/\/Nimble\/documentation\/Nimble\/recordFailure(_:location:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/recordTestingFailure(_:location:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/require(fileID:file:line:column:customError:_:)-44yvd",
        "doc:\/\/Nimble\/documentation\/Nimble\/require(fileID:file:line:column:customError:_:)-570ic",
        "doc:\/\/Nimble\/documentation\/Nimble\/require(fileID:file:line:column:customError:_:)-5u5iq",
        "doc:\/\/Nimble\/documentation\/Nimble\/require(fileID:file:line:column:customError:_:)-9jsi5",
        "doc:\/\/Nimble\/documentation\/Nimble\/require(fileID:file:line:column:customError:_:)-9sdlg",
        "doc:\/\/Nimble\/documentation\/Nimble\/require(fileID:file:line:column:customError:_:)-thjs",
        "doc:\/\/Nimble\/documentation\/Nimble\/require(fileID:file:line:column:customError:_:)-zz76",
        "doc:\/\/Nimble\/documentation\/Nimble\/requirea(fileID:file:line:column:customError:_:)-16re8",
        "doc:\/\/Nimble\/documentation\/Nimble\/requirea(fileID:file:line:column:customError:_:)-7p1cv",
        "doc:\/\/Nimble\/documentation\/Nimble\/requirea(fileID:file:line:column:customError:_:)-jk6",
        "doc:\/\/Nimble\/documentation\/Nimble\/requires(fileID:file:line:column:customError:_:)-2n16l",
        "doc:\/\/Nimble\/documentation\/Nimble\/requires(fileID:file:line:column:customError:_:)-2vg8e",
        "doc:\/\/Nimble\/documentation\/Nimble\/requires(fileID:file:line:column:customError:_:)-3rcmb",
        "doc:\/\/Nimble\/documentation\/Nimble\/requires(fileID:file:line:column:customError:_:)-58jfw",
        "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAllOf(_:)-2npr5",
        "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAllOf(_:)-99ble",
        "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAllOf(_:)-nprr",
        "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAllOf(_:)-x0z5",
        "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAnyOf(_:)-3q3xr",
        "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAnyOf(_:)-7m952",
        "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAnyOf(_:)-8groo",
        "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAnyOf(_:)-8yumz",
        "doc:\/\/Nimble\/documentation\/Nimble\/stringify(_:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/succeed()",
        "doc:\/\/Nimble\/documentation\/Nimble\/throwAssertion()",
        "doc:\/\/Nimble\/documentation\/Nimble\/throwError()",
        "doc:\/\/Nimble\/documentation\/Nimble\/throwError(_:closure:)-bepw",
        "doc:\/\/Nimble\/documentation\/Nimble\/throwError(_:closure:)-phyk",
        "doc:\/\/Nimble\/documentation\/Nimble\/throwError(closure:)-2uav9",
        "doc:\/\/Nimble\/documentation\/Nimble\/throwError(closure:)-6lkaq",
        "doc:\/\/Nimble\/documentation\/Nimble\/throwError(errorType:closure:)",
        "doc:\/\/Nimble\/documentation\/Nimble\/unwrap(fileID:file:line:column:customError:_:)-2pedm",
        "doc:\/\/Nimble\/documentation\/Nimble\/unwrap(fileID:file:line:column:customError:_:)-3w5pp",
        "doc:\/\/Nimble\/documentation\/Nimble\/unwrap(fileID:file:line:column:customError:_:)-7bq8w",
        "doc:\/\/Nimble\/documentation\/Nimble\/unwrap(fileID:file:line:column:customError:_:)-94o04",
        "doc:\/\/Nimble\/documentation\/Nimble\/unwrapa(fileID:file:line:column:customError:_:)-430og",
        "doc:\/\/Nimble\/documentation\/Nimble\/unwrapa(fileID:file:line:column:customError:_:)-ncpb",
        "doc:\/\/Nimble\/documentation\/Nimble\/unwraps(fileID:file:line:column:customError:_:)-8qogi",
        "doc:\/\/Nimble\/documentation\/Nimble\/unwraps(fileID:file:line:column:customError:_:)-ayfw",
        "doc:\/\/Nimble\/documentation\/Nimble\/waitUntil(timeout:fileID:file:line:column:action:)-5ski",
        "doc:\/\/Nimble\/documentation\/Nimble\/waitUntil(timeout:fileID:file:line:column:action:)-6pzxs",
        "doc:\/\/Nimble\/documentation\/Nimble\/waitUntil(timeout:fileID:file:line:column:action:)-8j9ew",
        "doc:\/\/Nimble\/documentation\/Nimble\/withAssertionHandler(_:fileID:file:line:column:closure:)-5m4st",
        "doc:\/\/Nimble\/documentation\/Nimble\/withAssertionHandler(_:fileID:file:line:column:closure:)-80yqc"
      ],
      "title" : "Functions"
    },
    {
      "identifiers" : [
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-15i87",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-1h75b",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-1m9eo",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-1r6my",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-27dsw",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-2qvt3",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-2rphw",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-2ukpv",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-31zpb",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-3p88",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-3tcy4",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-3uw3g",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-3w2c7",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-4472g",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-46lop",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-4zl37",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-56q10",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-5ci7n",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-6k4mv",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-6s1n7",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-6wgq2",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-6y4i0",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-6zzgy",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-7b2vg",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-7h6k0",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-7hyzu",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-7jdr5",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-7q401",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-7qmtr",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-83ok0",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-87xjw",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-8a3ii",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-8ow4y",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-8pens",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-95fll",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-9n7sx",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-rtqi",
        "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-sv6w",
        "doc:\/\/Nimble\/documentation\/Nimble\/!==(_:_:)-4ejai",
        "doc:\/\/Nimble\/documentation\/Nimble\/!==(_:_:)-yv04",
        "doc:\/\/Nimble\/documentation\/Nimble\/&&(_:_:)-4rkr1",
        "doc:\/\/Nimble\/documentation\/Nimble\/&&(_:_:)-9wt1",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-131t0",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-13f6e",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-19a2h",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-22767",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-2944j",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-2c2m2",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-2nosj",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-38095",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-3n0h2",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-3qzgj",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-3velv",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-45iuu",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4dwu6",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4flzp",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4itd6",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4j4w1",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4qnjf",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4roc5",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4ufvq",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4wc3u",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-59pur",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-5qjpb",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-60e9y",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-60str",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-73lf4",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-74nq2",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-7css5",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-7h5bs",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-7infz",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-7ovl0",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-8032l",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-89ryv",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-8cxsq",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-8vizw",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-90nx",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-98c6t",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-994kn",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-9gjj0",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-9k5o1",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-9wlko",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-d2r8",
        "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-ubo",
        "doc:\/\/Nimble\/documentation\/Nimble\/===(_:_:)-3bnja",
        "doc:\/\/Nimble\/documentation\/Nimble\/===(_:_:)-6v9vl",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-1dobt",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-2ey8b",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-34o1t",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-3k1ji",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-3z674",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-4wzz5",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-6nued",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-6nz5l",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-7002r",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-79bwb",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-7djfd",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-7f0li",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-83ze2",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-8v7n2",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-8vp4l",
        "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-h249",
        "doc:\/\/Nimble\/documentation\/Nimble\/_=(_:_:)-2q8b5",
        "doc:\/\/Nimble\/documentation\/Nimble\/_=(_:_:)-4nkxn",
        "doc:\/\/Nimble\/documentation\/Nimble\/_=(_:_:)-7z3c8",
        "doc:\/\/Nimble\/documentation\/Nimble\/_=(_:_:)-9r54u",
        "doc:\/\/Nimble\/documentation\/Nimble\/__(_:_:)-2dlok",
        "doc:\/\/Nimble\/documentation\/Nimble\/__(_:_:)-9x0w7"
      ],
      "title" : "Operators"
    },
    {
      "identifiers" : [
        "doc:\/\/Nimble\/documentation\/Nimble\/AsyncPredicate",
        "doc:\/\/Nimble\/documentation\/Nimble\/FileString",
        "doc:\/\/Nimble\/documentation\/Nimble\/Predicate",
        "doc:\/\/Nimble\/documentation\/Nimble\/PredicateResult",
        "doc:\/\/Nimble\/documentation\/Nimble\/PredicateStatus"
      ],
      "title" : "Type Aliases"
    },
    {
      "identifiers" : [
        "doc:\/\/Nimble\/documentation\/Nimble\/ExpectationMessage",
        "doc:\/\/Nimble\/documentation\/Nimble\/ExpectationStatus",
        "doc:\/\/Nimble\/documentation\/Nimble\/ExpectationStyle",
        "doc:\/\/Nimble\/documentation\/Nimble\/MatcherStatus",
        "doc:\/\/Nimble\/documentation\/Nimble\/NimbleTimeInterval",
        "doc:\/\/Nimble\/documentation\/Nimble\/ToSucceedResult"
      ],
      "title" : "Enumerations"
    },
    {
      "identifiers" : [
        "doc:\/\/Nimble\/documentation\/Nimble\/Foundation",
        "doc:\/\/Nimble\/documentation\/Nimble\/Swift"
      ],
      "title" : "Extended Modules"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/nimble"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Nimble/documentation/Nimble": {
  "abstract" : [
    {
      "inlineContent" : [
        {
          "text" : "Nimble",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " is a testing framework for verifying the outcomes and Swift or Objective-C expressions.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Nimble",
  "type" : "topic",
  "url" : "\/documentation\/nimble"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-15i87": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-15i87",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-15i87"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-1h75b": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-1h75b",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-1h75b"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-1m9eo": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-1m9eo",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-1m9eo"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-1r6my": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-1r6my",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-1r6my"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-27dsw": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-27dsw",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-27dsw"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-2qvt3": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")]?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-2qvt3",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-2qvt3"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-2rphw": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-2rphw",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-2rphw"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-2ukpv": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")]?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-2ukpv",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-2ukpv"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-31zpb": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-31zpb",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-31zpb"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-3p88": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-3p88",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-3p88"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-3tcy4": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-3tcy4",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-3tcy4"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-3uw3g": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-3uw3g",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-3uw3g"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-3w2c7": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-3w2c7",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-3w2c7"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-4472g": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<()>, ()) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-4472g",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-4472g"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-46lop": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : "]>, ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : "]?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-46lop",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-46lop"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-4zl37": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")]?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-4zl37",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-4zl37"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-56q10": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-56q10",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-56q10"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-5ci7n": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")]?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-5ci7n",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-5ci7n"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-6k4mv": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")]?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-6k4mv",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-6k4mv"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-6s1n7": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]>, ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-6s1n7",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-6s1n7"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-6wgq2": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")]?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-6wgq2",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-6wgq2"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-6y4i0": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-6y4i0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-6y4i0"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-6zzgy": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-6zzgy",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-6zzgy"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-7b2vg": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-7b2vg",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-7b2vg"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-7h6k0": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-7h6k0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-7h6k0"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-7hyzu": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-7hyzu",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-7hyzu"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-7jdr5": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : "]>, ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : "]?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-7jdr5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-7jdr5"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-7q401": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")]?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-7q401",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-7q401"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-7qmtr": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")]?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-7qmtr",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-7qmtr"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-83ok0": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]>, ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-83ok0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-83ok0"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-87xjw": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")]?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-87xjw",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-87xjw"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-8a3ii": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-8a3ii",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-8a3ii"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-8ow4y": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-8ow4y",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-8ow4y"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-8pens": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")]?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-8pens",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-8pens"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-95fll": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-95fll",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-95fll"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-9n7sx": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-9n7sx",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-9n7sx"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-rtqi": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-rtqi",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-rtqi"
},
"doc://Nimble/documentation/Nimble/!=(_:_:)-sv6w": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<()>, ())"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!=(_:_:)-sv6w",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!=(_:_:)-sv6w"
},
"doc://Nimble/documentation/Nimble/!==(_:_:)-4ejai": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s9AnyObjecta",
      "text" : "AnyObject"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s9AnyObjecta",
      "text" : "AnyObject"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!==(_:_:)-4ejai",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!==(_:_:)-4ejai"
},
"doc://Nimble/documentation/Nimble/!==(_:_:)-yv04": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "!=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s9AnyObjecta",
      "text" : "AnyObject"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s9AnyObjecta",
      "text" : "AnyObject"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/!==(_:_:)-yv04",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "!==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/!==(_:_:)-yv04"
},
"doc://Nimble/documentation/Nimble/&&(_:_:)-4rkr1": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "&&"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/&&(_:_:)-4rkr1",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "&&(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/&&(_:_:)-4rkr1"
},
"doc://Nimble/documentation/Nimble/&&(_:_:)-9wt1": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "&&"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">(some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncableMatcherP",
      "text" : "AsyncableMatcher"
    },
    {
      "kind" : "text",
      "text" : ", some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncableMatcherP",
      "text" : "AsyncableMatcher"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/&&(_:_:)-9wt1",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "&&(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/&&(_:_:)-9wt1"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-131t0": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, (expected"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", delta"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : "))"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-131t0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-131t0"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-13f6e": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-13f6e",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-13f6e"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-19a2h": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-19a2h",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-19a2h"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-22767": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-22767",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-22767"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-2944j": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-2944j",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-2944j"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-2c2m2": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-2c2m2",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-2c2m2"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-2nosj": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")]?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-2nosj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-2nosj"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-38095": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-38095",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-38095"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-3n0h2": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")]?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-3n0h2",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-3n0h2"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-3qzgj": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")]?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-3qzgj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-3qzgj"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-3velv": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")]?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-3velv",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-3velv"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-45iuu": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-45iuu",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-45iuu"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-4dwu6": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<()>, ()) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4dwu6",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-4dwu6"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-4flzp": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")]?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4flzp",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-4flzp"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-4itd6": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4itd6",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-4itd6"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-4j4w1": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : "]>, ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : "]?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4j4w1",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-4j4w1"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-4qnjf": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]>, ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4qnjf",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-4qnjf"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-4roc5": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")]?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4roc5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-4roc5"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-4ufvq": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4ufvq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-4ufvq"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-4wc3u": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : "]>, ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : "]?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-4wc3u",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-4wc3u"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-59pur": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-59pur",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-59pur"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-5qjpb": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-5qjpb",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-5qjpb"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-60e9y": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-60e9y",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-60e9y"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-60str": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-60str",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-60str"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-73lf4": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-73lf4",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-73lf4"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-74nq2": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-74nq2",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-74nq2"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-7css5": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, (expected"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", delta"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ")) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-7css5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-7css5"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-7h5bs": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-7h5bs",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-7h5bs"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-7infz": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")]?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-7infz",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-7infz"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-7ovl0": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, (expected"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", delta"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : "))"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-7ovl0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-7ovl0"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-8032l": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-8032l",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-8032l"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-89ryv": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-89ryv",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-89ryv"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-8cxsq": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-8cxsq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-8cxsq"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-8vizw": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")]?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-8vizw",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-8vizw"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-90nx": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-90nx",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-90nx"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-98c6t": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")]?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-98c6t",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-98c6t"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-994kn": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-994kn",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-994kn"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-9gjj0": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")>, ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-9gjj0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-9gjj0"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-9k5o1": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<()>, ())"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-9k5o1",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-9k5o1"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-9wlko": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")]>, [("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")]?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-9wlko",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-9wlko"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-d2r8": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]>, ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-d2r8",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-d2r8"
},
"doc://Nimble/documentation/Nimble/==(_:_:)-ubo": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "=="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, (expected"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", delta"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ")) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/==(_:_:)-ubo",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "==(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/==(_:_:)-ubo"
},
"doc://Nimble/documentation/Nimble/===(_:_:)-3bnja": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "==="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s9AnyObjecta",
      "text" : "AnyObject"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s9AnyObjecta",
      "text" : "AnyObject"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/===(_:_:)-3bnja",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "===(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/===(_:_:)-3bnja"
},
"doc://Nimble/documentation/Nimble/===(_:_:)-6v9vl": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "==="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s9AnyObjecta",
      "text" : "AnyObject"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s9AnyObjecta",
      "text" : "AnyObject"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/===(_:_:)-6v9vl",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "===(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/===(_:_:)-6v9vl"
},
"doc://Nimble/documentation/Nimble/AssertionDispatcher": {
  "abstract" : [
    {
      "text" : "AssertionDispatcher allows multiple AssertionHandlers to receive",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "assertion messages.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AssertionDispatcher"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AssertionDispatcher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AssertionDispatcher"
    }
  ],
  "role" : "symbol",
  "title" : "AssertionDispatcher",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/assertiondispatcher"
},
"doc://Nimble/documentation/Nimble/AssertionHandler": {
  "abstract" : [
    {
      "text" : "Protocol for the assertion handler that Nimble uses for all expectations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AssertionHandler"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AssertionHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AssertionHandler"
    }
  ],
  "role" : "symbol",
  "title" : "AssertionHandler",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/assertionhandler"
},
"doc://Nimble/documentation/Nimble/AssertionRecord": {
  "abstract" : [
    {
      "text" : "A data structure that stores information about an assertion when",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "AssertionRecorder is set as the Nimble assertion handler.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AssertionRecord"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AssertionRecord",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AssertionRecord"
    }
  ],
  "role" : "symbol",
  "title" : "AssertionRecord",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/assertionrecord"
},
"doc://Nimble/documentation/Nimble/AssertionRecorder": {
  "abstract" : [
    {
      "text" : "An AssertionHandler that silently records assertions that Nimble makes.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This is useful for testing failure messages for matchers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AssertionRecorder"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AssertionRecorder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AssertionRecorder"
    }
  ],
  "role" : "symbol",
  "title" : "AssertionRecorder",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/assertionrecorder"
},
"doc://Nimble/documentation/Nimble/AsyncExpectation": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncExpectation"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpectation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncExpectation"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncExpectation",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncexpectation"
},
"doc://Nimble/documentation/Nimble/AsyncExpression": {
  "abstract" : [
    {
      "text" : "Expression represents the closure of the value inside expect(…).",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Expressions are memoized by default. This makes them safe to call",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "evaluate() multiple times without causing a re-evaluation of the underlying",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "closure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncExpression"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpression",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncExpression"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncExpression",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncexpression"
},
"doc://Nimble/documentation/Nimble/AsyncMatcher": {
  "abstract" : [
    {
      "text" : "An AsyncMatcher is part of the new matcher API that provides assertions to expectations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncMatcher"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncMatcher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncMatcher"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncMatcher",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncmatcher"
},
"doc://Nimble/documentation/Nimble/AsyncPredicate": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncPredicate"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncPredicate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncPredicate"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncPredicate",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncpredicate"
},
"doc://Nimble/documentation/Nimble/AsyncRequirement": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncRequirement"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncRequirement"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncRequirement",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncrequirement"
},
"doc://Nimble/documentation/Nimble/AsyncableMatcher": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncableMatcher"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncableMatcher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncableMatcher"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncableMatcher",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/asyncablematcher"
},
"doc://Nimble/documentation/Nimble/Background": {
  "abstract" : [
    {
      "text" : "Apple’s Xcode includes the XCTest framework, which provides",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "assertion macros to test whether code behaves properly.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "For example, to assert that ",
      "type" : "text"
    },
    {
      "code" : "1 + 1 = 2",
      "type" : "codeVoice"
    },
    {
      "text" : ", XCTest has you write:",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Background",
  "kind" : "article",
  "role" : "article",
  "title" : "Some Background: Expressing Outcomes Using Assertions in XCTest",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/background"
},
"doc://Nimble/documentation/Nimble/BadInstructionException": {
  "abstract" : [
    {
      "text" : "Without Mach exceptions or the Objective-C runtime, there’s nothing to put in the exception object. It’s really just a boolean – either a SIGILL was caught or not.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BadInstructionException"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/BadInstructionException",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BadInstructionException"
    }
  ],
  "role" : "symbol",
  "title" : "BadInstructionException",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/badinstructionexception"
},
"doc://Nimble/documentation/Nimble/Collections": {
  "abstract" : [
    {
      "text" : "Nimble allows you to easily check ",
      "type" : "text"
    },
    {
      "code" : "Collection",
      "type" : "codeVoice"
    },
    {
      "text" : "s.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Collections",
  "kind" : "article",
  "role" : "article",
  "title" : "Collection",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/collections"
},
"doc://Nimble/documentation/Nimble/Comparisons": {
  "abstract" : [
    {
      "text" : "Comparing the expression with other values.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Comparisons",
  "kind" : "article",
  "role" : "article",
  "title" : "Comparisons",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/comparisons"
},
"doc://Nimble/documentation/Nimble/Concurrency": {
  "abstract" : [
    {
      "text" : "Nimble makes it easy to await for an async function to complete.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Concurrency",
  "kind" : "article",
  "role" : "article",
  "title" : "Swift Concurrency (Async\/Await) Support",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/concurrency"
},
"doc://Nimble/documentation/Nimble/CustomValidation": {
  "abstract" : [
    {
      "text" : "Nimble allows you to perform custom validation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/CustomValidation",
  "kind" : "article",
  "role" : "article",
  "title" : "Custom Validation",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/customvalidation"
},
"doc://Nimble/documentation/Nimble/DefaultDelta": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DefaultDelta"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/DefaultDelta",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "DefaultDelta",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/defaultdelta"
},
"doc://Nimble/documentation/Nimble/Equivalence": {
  "abstract" : [
    {
      "text" : "Checking if a value is equal to another.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Equivalence",
  "kind" : "article",
  "role" : "article",
  "title" : "Equivalence",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equivalence"
},
"doc://Nimble/documentation/Nimble/Exceptions": {
  "abstract" : [
    {
      "text" : "Check exceptions raised from Objective-C.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Exceptions",
  "kind" : "article",
  "role" : "article",
  "title" : "Exceptions",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/exceptions"
},
"doc://Nimble/documentation/Nimble/Expectation": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Expectation"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Expectation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Expectation"
    }
  ],
  "role" : "symbol",
  "title" : "Expectation",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expectation"
},
"doc://Nimble/documentation/Nimble/ExpectationMessage": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExpectationMessage"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/ExpectationMessage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExpectationMessage"
    }
  ],
  "role" : "symbol",
  "title" : "ExpectationMessage",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expectationmessage"
},
"doc://Nimble/documentation/Nimble/ExpectationNil": {
  "abstract" : [
    {
      "text" : "Represents ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : " value to be used with the operator overloads for ",
      "type" : "text"
    },
    {
      "code" : "beNil",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExpectationNil"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/ExpectationNil",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExpectationNil"
    }
  ],
  "role" : "symbol",
  "title" : "ExpectationNil",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expectationnil"
},
"doc://Nimble/documentation/Nimble/ExpectationStatus": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExpectationStatus"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/ExpectationStatus",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExpectationStatus"
    }
  ],
  "role" : "symbol",
  "title" : "ExpectationStatus",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expectationstatus"
},
"doc://Nimble/documentation/Nimble/ExpectationStyle": {
  "abstract" : [
    {
      "text" : "The Expectation style intended for comparison to a MatcherStatus.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExpectationStyle"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/ExpectationStyle",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExpectationStyle"
    }
  ],
  "role" : "symbol",
  "title" : "ExpectationStyle",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expectationstyle"
},
"doc://Nimble/documentation/Nimble/Expectations": {
  "abstract" : [
    {
      "text" : "Nimble allows you to express expectations using a natural,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "easily understood language:",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Expectations",
  "kind" : "article",
  "role" : "article",
  "title" : "Expectations Using `expect(...).to`",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expectations"
},
"doc://Nimble/documentation/Nimble/Expression": {
  "abstract" : [
    {
      "text" : "Expression represents the closure of the value inside expect(…).",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Expressions are memoized by default. This makes them safe to call",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "evaluate() multiple times without causing a re-evaluation of the underlying",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "closure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Expression"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Expression",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Expression"
    }
  ],
  "role" : "symbol",
  "title" : "Expression",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expression"
},
"doc://Nimble/documentation/Nimble/FailureMessage": {
  "abstract" : [
    {
      "text" : "Encapsulates the failure message that matchers can report to the end user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FailureMessage"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/FailureMessage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FailureMessage"
    }
  ],
  "role" : "symbol",
  "title" : "FailureMessage",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/failuremessage"
},
"doc://Nimble/documentation/Nimble/FileString": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FileString"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/FileString",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FileString"
    }
  ],
  "role" : "symbol",
  "title" : "FileString",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/filestring"
},
"doc://Nimble/documentation/Nimble/Foundation": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Foundation",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Foundation",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/foundation"
},
"doc://Nimble/documentation/Nimble/GroupsOfMatchers": {
  "abstract" : [
    {
      "text" : "Combining matchers into a single Expectation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/GroupsOfMatchers",
  "kind" : "article",
  "role" : "article",
  "title" : "Matching a value to any of a group of matchers",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/groupsofmatchers"
},
"doc://Nimble/documentation/Nimble/Identity": {
  "abstract" : [
    {
      "text" : "Checking if an object is the same address as another.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Identity",
  "kind" : "article",
  "role" : "article",
  "title" : "Identity",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/identity"
},
"doc://Nimble/documentation/Nimble/Map": {
  "abstract" : [
    {
      "text" : "Mapping a value to another value in the matcher.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Map",
  "kind" : "article",
  "role" : "article",
  "title" : "Mapping a Value to Another Value",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/map"
},
"doc://Nimble/documentation/Nimble/Matcher": {
  "abstract" : [
    {
      "text" : "A Matcher is part of the new matcher API that provides assertions to expectations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Matcher"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Matcher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Matcher"
    }
  ],
  "role" : "symbol",
  "title" : "Matcher",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/matcher"
},
"doc://Nimble/documentation/Nimble/MatcherResult": {
  "abstract" : [
    {
      "text" : "The value that a Matcher returns to describe if the given (actual) value matches the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "matcher.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MatcherResult"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/MatcherResult",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MatcherResult"
    }
  ],
  "role" : "symbol",
  "title" : "MatcherResult",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/matcherresult"
},
"doc://Nimble/documentation/Nimble/MatcherStatus": {
  "abstract" : [
    {
      "text" : "MatcherStatus is a trinary that indicates if a Matcher matches a given value or not",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MatcherStatus"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/MatcherStatus",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MatcherStatus"
    }
  ],
  "role" : "symbol",
  "title" : "MatcherStatus",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/matcherstatus"
},
"doc://Nimble/documentation/Nimble/NMBCollection": {
  "abstract" : [
    {
      "text" : "Protocol for types that support only beEmpty(), haveCount() matchers",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NMBCollection"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/NMBCollection",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NMBCollection"
    }
  ],
  "role" : "symbol",
  "title" : "NMBCollection",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/nmbcollection"
},
"doc://Nimble/documentation/Nimble/NMBContainer": {
  "abstract" : [
    {
      "text" : "Protocol for types that support contain() matcher.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NMBContainer"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/NMBContainer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NMBContainer"
    }
  ],
  "role" : "symbol",
  "title" : "NMBContainer",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/nmbcontainer"
},
"doc://Nimble/documentation/Nimble/NMBDoubleConvertible": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NMBDoubleConvertible"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/NMBDoubleConvertible",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NMBDoubleConvertible"
    }
  ],
  "role" : "symbol",
  "title" : "NMBDoubleConvertible",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/nmbdoubleconvertible"
},
"doc://Nimble/documentation/Nimble/NMBOrderedCollection": {
  "abstract" : [
    {
      "text" : "Protocol for types that support beginWith(), endWith(), beEmpty() matchers",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NMBOrderedCollection"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/NMBOrderedCollection",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NMBOrderedCollection"
    }
  ],
  "role" : "symbol",
  "title" : "NMBOrderedCollection",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/nmborderedcollection"
},
"doc://Nimble/documentation/Nimble/NMBWait": {
  "abstract" : [
    {
      "text" : "Only classes, protocols, methods, properties, and subscript declarations can be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "bridges to Objective-C via the @objc keyword. This class encapsulates callback-style",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "asynchronous waiting logic so that it may be called from Objective-C and Swift.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NMBWait"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/NMBWait",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NMBWait"
    }
  ],
  "role" : "symbol",
  "title" : "NMBWait",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/nmbwait"
},
"doc://Nimble/documentation/Nimble/NimbleAssertionHandler": {
  "abstract" : [
    {
      "text" : "Global backing interface for assertions that Nimble creates.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Defaults to a private test handler that passes through to Swift Testing or XCTest.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NimbleAssertionHandler"
    },
    {
      "kind" : "text",
      "text" : ": any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AssertionHandlerP",
      "text" : "AssertionHandler"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/NimbleAssertionHandler",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "NimbleAssertionHandler",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/nimbleassertionhandler"
},
"doc://Nimble/documentation/Nimble/NimbleShortXCTestHandler": {
  "abstract" : [
    {
      "text" : "Alternative handler for Nimble. This assertion handler passes failures along",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to XCTest by attempting to reduce the failure message size.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NimbleShortXCTestHandler"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/NimbleShortXCTestHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NimbleShortXCTestHandler"
    }
  ],
  "role" : "symbol",
  "title" : "NimbleShortXCTestHandler",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/nimbleshortxctesthandler"
},
"doc://Nimble/documentation/Nimble/NimbleSwiftTestingHandler": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NimbleSwiftTestingHandler"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/NimbleSwiftTestingHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NimbleSwiftTestingHandler"
    }
  ],
  "role" : "symbol",
  "title" : "NimbleSwiftTestingHandler",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/nimbleswifttestinghandler"
},
"doc://Nimble/documentation/Nimble/NimbleTestingHandler": {
  "abstract" : [
    {
      "text" : "Default handler for Nimble. This assertion handler passes on to Swift Testing or XCTest.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NimbleTestingHandler"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/NimbleTestingHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NimbleTestingHandler"
    }
  ],
  "role" : "symbol",
  "title" : "NimbleTestingHandler",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/nimbletestinghandler"
},
"doc://Nimble/documentation/Nimble/NimbleTimeInterval": {
  "abstract" : [
    {
      "text" : "A reimplementation of ",
      "type" : "text"
    },
    {
      "code" : "DispatchTimeInterval",
      "type" : "codeVoice"
    },
    {
      "text" : " without the ",
      "type" : "text"
    },
    {
      "code" : "never",
      "type" : "codeVoice"
    },
    {
      "text" : " case, and conforming to ",
      "type" : "text"
    },
    {
      "code" : "Sendable",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NimbleTimeInterval"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/NimbleTimeInterval",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NimbleTimeInterval"
    }
  ],
  "role" : "symbol",
  "title" : "NimbleTimeInterval",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/nimbletimeinterval"
},
"doc://Nimble/documentation/Nimble/NimbleXCTestHandler": {
  "abstract" : [
    {
      "text" : "This assertion handler passes failures along to XCTest.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NimbleXCTestHandler"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/NimbleXCTestHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NimbleXCTestHandler"
    }
  ],
  "role" : "symbol",
  "title" : "NimbleXCTestHandler",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/nimblexctesthandler"
},
"doc://Nimble/documentation/Nimble/Notifications": {
  "abstract" : [
    {
      "text" : "Checking Notifications posted to ",
      "type" : "text"
    },
    {
      "code" : "NotificationCenter",
      "type" : "codeVoice"
    },
    {
      "text" : " or a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "DistributedNotificationCenter",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Notifications",
  "kind" : "article",
  "role" : "article",
  "title" : "Notifications",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/notifications"
},
"doc://Nimble/documentation/Nimble/ObjectiveC": {
  "abstract" : [
    {
      "text" : "Nimble has full support for Objective-C. However, there are two things",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to keep in mind when using Nimble in Objective-C:",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/ObjectiveC",
  "kind" : "article",
  "role" : "article",
  "title" : "Objective-C Support",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/objectivec"
},
"doc://Nimble/documentation/Nimble/PollingDefaults": {
  "abstract" : [
    {
      "text" : "If you are running on a slower machine, it could be useful to increase the default timeout value",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "or slow down poll interval. Default timeout interval is 1, and poll interval is 0.01.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PollingDefaults"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/PollingDefaults",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PollingDefaults"
    }
  ],
  "role" : "symbol",
  "title" : "PollingDefaults",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/pollingdefaults"
},
"doc://Nimble/documentation/Nimble/PollingExpectations": {
  "abstract" : [
    {
      "text" : "In Nimble, it’s easy to make expectations on values that are updated",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "asynchronously. These are called Polling Expectations, because they work by",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "continuously polling the Expectation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/PollingExpectations",
  "kind" : "article",
  "role" : "article",
  "title" : "Polling Expectations",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/pollingexpectations"
},
"doc://Nimble/documentation/Nimble/Predicate": {
  "abstract" : [
    {
      "text" : "Provides an easy upgrade path for custom Matchers to be renamed to Matchers",
      "type" : "text"
    }
  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Predicate"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Predicate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Predicate"
    }
  ],
  "role" : "symbol",
  "title" : "Predicate",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/predicate"
},
"doc://Nimble/documentation/Nimble/PredicateResult": {
  "abstract" : [
    {
      "text" : "Provides an easy upgrade path for custom Matchers to be renamed to Matchers",
      "type" : "text"
    }
  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PredicateResult"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/PredicateResult",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PredicateResult"
    }
  ],
  "role" : "symbol",
  "title" : "PredicateResult",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/predicateresult"
},
"doc://Nimble/documentation/Nimble/PredicateStatus": {
  "abstract" : [
    {
      "text" : "Provides an easy upgrade path for custom Matchers to be renamed to Matchers",
      "type" : "text"
    }
  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PredicateStatus"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/PredicateStatus",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PredicateStatus"
    }
  ],
  "role" : "symbol",
  "title" : "PredicateStatus",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/predicatestatus"
},
"doc://Nimble/documentation/Nimble/Require": {
  "abstract" : [
    {
      "text" : "Nimble 13.1 added the ",
      "type" : "text"
    },
    {
      "code" : "require",
      "type" : "codeVoice"
    },
    {
      "text" : " dsl to complement ",
      "type" : "text"
    },
    {
      "code" : "expect",
      "type" : "codeVoice"
    },
    {
      "text" : ". ",
      "type" : "text"
    },
    {
      "code" : "require",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "looks similar to ",
      "type" : "text"
    },
    {
      "code" : "expect",
      "type" : "codeVoice"
    },
    {
      "text" : " and works with matchers just like ",
      "type" : "text"
    },
    {
      "code" : "expect",
      "type" : "codeVoice"
    },
    {
      "text" : " does. The",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "difference is that ",
      "type" : "text"
    },
    {
      "code" : "require",
      "type" : "codeVoice"
    },
    {
      "text" : " requires that the matcher passes - if the matcher",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "doesn’t pass, then ",
      "type" : "text"
    },
    {
      "code" : "require",
      "type" : "codeVoice"
    },
    {
      "text" : " will throw an error. Additionally, if ",
      "type" : "text"
    },
    {
      "code" : "require",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "does pass, then it’ll return the result of running the expression.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Require",
  "kind" : "article",
  "role" : "article",
  "title" : "Using `require` to demand that a matcher pass before continuing",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/require"
},
"doc://Nimble/documentation/Nimble/RequireError": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RequireError"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/RequireError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RequireError"
    }
  ],
  "role" : "symbol",
  "title" : "RequireError",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/requireerror"
},
"doc://Nimble/documentation/Nimble/Result": {
  "abstract" : [
    {
      "text" : "You can check the contents of a ",
      "type" : "text"
    },
    {
      "code" : "Result",
      "type" : "codeVoice"
    },
    {
      "text" : " type using the ",
      "type" : "text"
    },
    {
      "code" : "beSuccess",
      "type" : "codeVoice"
    },
    {
      "text" : " or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "beFailure",
      "type" : "codeVoice"
    },
    {
      "text" : " matchers.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Result",
  "kind" : "article",
  "role" : "article",
  "title" : "Result",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/result"
},
"doc://Nimble/documentation/Nimble/SourceLocation": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SourceLocation"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SourceLocation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SourceLocation"
    }
  ],
  "role" : "symbol",
  "title" : "SourceLocation",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/sourcelocation"
},
"doc://Nimble/documentation/Nimble/Strings": {
  "abstract" : [
    {
      "text" : "You can check strings using the ",
      "type" : "text"
    },
    {
      "code" : "contain",
      "type" : "codeVoice"
    },
    {
      "text" : ", ",
      "type" : "text"
    },
    {
      "code" : "beginWith",
      "type" : "codeVoice"
    },
    {
      "text" : ", ",
      "type" : "text"
    },
    {
      "code" : "endWith",
      "type" : "codeVoice"
    },
    {
      "text" : ", ",
      "type" : "text"
    },
    {
      "code" : "beEmpty",
      "type" : "codeVoice"
    },
    {
      "text" : ",",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and ",
      "type" : "text"
    },
    {
      "code" : "match",
      "type" : "codeVoice"
    },
    {
      "text" : " matchers.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Strings",
  "kind" : "article",
  "role" : "article",
  "title" : "Strings",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/strings"
},
"doc://Nimble/documentation/Nimble/Swift": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Swift",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Swift",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/swift"
},
"doc://Nimble/documentation/Nimble/SwiftAssertions": {
  "abstract" : [
    {
      "text" : "If you’re using Swift, you can use the ",
      "type" : "text"
    },
    {
      "code" : "throwAssertion",
      "type" : "codeVoice"
    },
    {
      "text" : " matcher to check if an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "assertion is thrown (e.g. ",
      "type" : "text"
    },
    {
      "code" : "fatalError()",
      "type" : "codeVoice"
    },
    {
      "text" : ").",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SwiftAssertions",
  "kind" : "article",
  "role" : "article",
  "title" : "Swift Assertions",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/swiftassertions"
},
"doc://Nimble/documentation/Nimble/SwiftErrors": {
  "abstract" : [
    {
      "text" : "You can use the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/throwError()",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " matcher to check if an error is thrown, and the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/matchError(_:)-8o974",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to check already-captured errors.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SwiftErrors",
  "kind" : "article",
  "role" : "article",
  "title" : "Swift Error Handling",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/swifterrors"
},
"doc://Nimble/documentation/Nimble/SyncExpectation": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SyncExpectation"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncExpectation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SyncExpectation"
    }
  ],
  "role" : "symbol",
  "title" : "SyncExpectation",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/syncexpectation"
},
"doc://Nimble/documentation/Nimble/SyncRequirement": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SyncRequirement"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncRequirement",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SyncRequirement"
    }
  ],
  "role" : "symbol",
  "title" : "SyncRequirement",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/syncrequirement"
},
"doc://Nimble/documentation/Nimble/TestOutputStringConvertible": {
  "abstract" : [
    {
      "text" : "A type with a customized test output text representation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TestOutputStringConvertible"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/TestOutputStringConvertible",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TestOutputStringConvertible"
    }
  ],
  "role" : "symbol",
  "title" : "TestOutputStringConvertible",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/testoutputstringconvertible"
},
"doc://Nimble/documentation/Nimble/ToSucceedResult": {
  "abstract" : [
    {
      "text" : "Used by the ",
      "type" : "text"
    },
    {
      "code" : "succeed",
      "type" : "codeVoice"
    },
    {
      "text" : " matcher.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ToSucceedResult"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/ToSucceedResult",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ToSucceedResult"
    }
  ],
  "role" : "symbol",
  "title" : "ToSucceedResult",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/tosucceedresult"
},
"doc://Nimble/documentation/Nimble/Truthiness": {
  "abstract" : [
    {
      "text" : "Checking whether an expression is true, false, or nil.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/Truthiness",
  "kind" : "article",
  "role" : "article",
  "title" : "Truthiness",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/truthiness"
},
"doc://Nimble/documentation/Nimble/TypeChecking": {
  "abstract" : [
    {
      "text" : "Nimble supports checking the type membership of any kind of object, whether",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Objective-C conformant or not.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/TypeChecking",
  "kind" : "article",
  "role" : "article",
  "title" : "Type Checking",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/typechecking"
},
"doc://Nimble/documentation/Nimble/WritingCustomMatchers": {
  "abstract" : [
    {
      "text" : "In Nimble, matchers are Swift functions that take an expected",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "value and return a ",
      "type" : "text"
    },
    {
      "code" : "Matcher",
      "type" : "codeVoice"
    },
    {
      "text" : " closure. Take ",
      "type" : "text"
    },
    {
      "code" : "equal",
      "type" : "codeVoice"
    },
    {
      "text" : ", for example:",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/WritingCustomMatchers",
  "kind" : "article",
  "role" : "article",
  "title" : "Writing Your Own Matchers",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/writingcustommatchers"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-1dobt": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "≈"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-1dobt",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "≈(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-1dobt"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-2ey8b": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "≈"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-2ey8b",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "≈(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-2ey8b"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-34o1t": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : ">"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-34o1t",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : ">(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-34o1t"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-3k1ji": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "≈"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, (expected"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", delta"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : "))"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-3k1ji",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "≈(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-3k1ji"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-3z674": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "±"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ") -> (expected"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", delta"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-3z674",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "±(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-3z674"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-4wzz5": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "≈"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, (expected"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", delta"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ")) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-4wzz5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "≈(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-4wzz5"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-6nued": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "≈"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, (expected"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", delta"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ")) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-6nued",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "≈(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-6nued"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-6nz5l": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "≈"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-6nz5l",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "≈(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-6nz5l"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-7002r": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "±"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ") -> (expected"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", delta"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-7002r",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "±(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-7002r"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-79bwb": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "<"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "V"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "V"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "V"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-79bwb",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "<(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-79bwb"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-7djfd": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "≈"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-7djfd",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "≈(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-7djfd"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-7f0li": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "≈"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-7f0li",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "≈(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-7f0li"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-83ze2": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "≈"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, (expected"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", delta"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : "))"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-83ze2",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "≈(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-83ze2"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-8v7n2": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "≈"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-8v7n2",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "≈(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-8v7n2"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-8vp4l": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "<"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "V"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "V"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "V"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-8vp4l",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "<(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-8vp4l"
},
"doc://Nimble/documentation/Nimble/_(_:_:)-h249": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : ">"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_(_:_:)-h249",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : ">(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_(_:_:)-h249"
},
"doc://Nimble/documentation/Nimble/_=(_:_:)-2q8b5": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "<="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_=(_:_:)-2q8b5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "<=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_=(_:_:)-2q8b5"
},
"doc://Nimble/documentation/Nimble/_=(_:_:)-4nkxn": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : ">="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_=(_:_:)-4nkxn",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : ">=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_=(_:_:)-4nkxn"
},
"doc://Nimble/documentation/Nimble/_=(_:_:)-7z3c8": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : ">="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_=(_:_:)-7z3c8",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : ">=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_=(_:_:)-7z3c8"
},
"doc://Nimble/documentation/Nimble/_=(_:_:)-9r54u": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "<="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/_=(_:_:)-9r54u",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "<=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/_=(_:_:)-9r54u"
},
"doc://Nimble/documentation/Nimble/__(_:_:)-2dlok": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "||"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/__(_:_:)-2dlok",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "||(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/__(_:_:)-2dlok"
},
"doc://Nimble/documentation/Nimble/__(_:_:)-9x0w7": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "||"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">(some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncableMatcherP",
      "text" : "AsyncableMatcher"
    },
    {
      "kind" : "text",
      "text" : ", some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncableMatcherP",
      "text" : "AsyncableMatcher"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/__(_:_:)-9x0w7",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "||(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/__(_:_:)-9x0w7"
},
"doc://Nimble/documentation/Nimble/allPass(_:)-2jexg": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "allPass"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/allPass(_:)-2jexg",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "allPass(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/allpass(_:)-2jexg"
},
"doc://Nimble/documentation/Nimble/allPass(_:)-5avdc": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "allPass"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/allPass(_:)-5avdc",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "allPass(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/allpass(_:)-5avdc"
},
"doc://Nimble/documentation/Nimble/allPass(_:)-6q6j5": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "allPass"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/allPass(_:)-6q6j5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "allPass(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/allpass(_:)-6q6j5"
},
"doc://Nimble/documentation/Nimble/allPass(_:)-9i1yo": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "allPass"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/allPass(_:)-9i1yo",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "allPass(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/allpass(_:)-9i1yo"
},
"doc://Nimble/documentation/Nimble/allPass(_:_:)-3kwct": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "allPass"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/allPass(_:_:)-3kwct",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "allPass(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/allpass(_:_:)-3kwct"
},
"doc://Nimble/documentation/Nimble/allPass(_:_:)-59vkt": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "allPass"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/allPass(_:_:)-59vkt",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "allPass(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/allpass(_:_:)-59vkt"
},
"doc://Nimble/documentation/Nimble/be(_:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is the same instance",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as the expected instance.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "be"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s9AnyObjecta",
      "text" : "AnyObject"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s9AnyObjecta",
      "text" : "AnyObject"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/be(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "be(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/be(_:)"
},
"doc://Nimble/documentation/Nimble/beAKindOf(_:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is an instance of the given class.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beAKindOf"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ".Type) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beAKindOf(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beAKindOf(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beakindof(_:)"
},
"doc://Nimble/documentation/Nimble/beAnInstanceOf(_:)-25vd8": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is an instance of the given class.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beAnInstanceOf"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s8AnyClassa",
      "text" : "AnyClass"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation8NSObjectC",
      "text" : "NSObject"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beAnInstanceOf(_:)-25vd8",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beAnInstanceOf(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beaninstanceof(_:)-25vd8"
},
"doc://Nimble/documentation/Nimble/beAnInstanceOf(_:)-3m1ll": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is an ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "exact",
          "type" : "text"
        }
      ],
      "type" : "emphasis"
    },
    {
      "text" : " instance of the given class.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beAnInstanceOf"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ".Type) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beAnInstanceOf(_:)-3m1ll",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beAnInstanceOf(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beaninstanceof(_:)-3m1ll"
},
"doc://Nimble/documentation/Nimble/beCloseTo(_:within:)-1penf": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when a value is close to another. This is used for floating",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "point values which can have imprecise results when doing arithmetic on them.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beCloseTo"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "within"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beCloseTo(_:within:)-1penf",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beCloseTo(_:within:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/becloseto(_:within:)-1penf"
},
"doc://Nimble/documentation/Nimble/beCloseTo(_:within:)-2ekge": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beCloseTo"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Values"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Values"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "within"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Values"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beCloseTo(_:within:)-2ekge",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beCloseTo(_:within:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/becloseto(_:within:)-2ekge"
},
"doc://Nimble/documentation/Nimble/beCloseTo(_:within:)-8goy6": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when a value is close to another. This is used for floating",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "point values which can have imprecise results when doing arithmetic on them.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beCloseTo"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "within"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beCloseTo(_:within:)-8goy6",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beCloseTo(_:within:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/becloseto(_:within:)-8goy6"
},
"doc://Nimble/documentation/Nimble/beEmpty()-1phtu": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when a value is “empty”. For collections, this",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "means the are no items in that collection. For strings, it is an empty string.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beEmpty"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-1phtu",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beEmpty()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beempty()-1phtu"
},
"doc://Nimble/documentation/Nimble/beEmpty()-2dmdf": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when a value is “empty”. For collections, this",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "means the are no items in that collection. For strings, it is an empty string.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beEmpty"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-2dmdf",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beEmpty()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beempty()-2dmdf"
},
"doc://Nimble/documentation/Nimble/beEmpty()-4tk26": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when a value is “empty”. For collections, this",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "means the are no items in that collection. For strings, it is an empty string.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beEmpty"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation12NSDictionaryC",
      "text" : "NSDictionary"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-4tk26",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beEmpty()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beempty()-4tk26"
},
"doc://Nimble/documentation/Nimble/beEmpty()-5ybqq": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when a value is “empty”. For collections, this",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "means the are no items in that collection. For strings, it is an empty string.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beEmpty"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation7NSArrayC",
      "text" : "NSArray"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-5ybqq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beEmpty()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beempty()-5ybqq"
},
"doc://Nimble/documentation/Nimble/beEmpty()-6mkht": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when a value is “empty”. For collections, this",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "means the are no items in that collection. For NSString instances, it is an empty string.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beEmpty"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation8NSStringC",
      "text" : "NSString"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-6mkht",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beEmpty()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beempty()-6mkht"
},
"doc://Nimble/documentation/Nimble/beEmpty()-8xbp2": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when a value is “empty”. For collections, this",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "means the are no items in that collection. For strings, it is an empty string.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beEmpty"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble13NMBCollectionP",
      "text" : "NMBCollection"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-8xbp2",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beEmpty()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beempty()-8xbp2"
},
"doc://Nimble/documentation/Nimble/beEmpty()-8zwdh": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when a value is “empty”. For collections, this",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "means the are no items in that collection. For strings, it is an empty string.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beEmpty"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-8zwdh",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beEmpty()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beempty()-8zwdh"
},
"doc://Nimble/documentation/Nimble/beEmpty()-9y5jr": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when a value is “empty”. For collections, this",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "means the are no items in that collection. For strings, it is an empty string.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beEmpty"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beEmpty()-9y5jr",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beEmpty()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beempty()-9y5jr"
},
"doc://Nimble/documentation/Nimble/beFailure(_:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher for Result that succeeds when the actual value is failure",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and the provided matcher matches.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beFailure"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6ResultO",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beFailure(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beFailure(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/befailure(_:)"
},
"doc://Nimble/documentation/Nimble/beFailure(test:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher for Result that succeeds when the actual value is failure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beFailure"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "test"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6ResultO",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beFailure(test:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beFailure(test:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/befailure(test:)"
},
"doc://Nimble/documentation/Nimble/beFalse()": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is exactly false.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This matcher will not match against nils.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beFalse"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beFalse()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beFalse()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/befalse()"
},
"doc://Nimble/documentation/Nimble/beFalsy()": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is logically false.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This matcher will match against nils.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beFalsy"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beFalsy()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beFalsy()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/befalsy()"
},
"doc://Nimble/documentation/Nimble/beGreaterThan(_:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is greater than the expected value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beGreaterThan"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beGreaterThan(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beGreaterThan(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/begreaterthan(_:)"
},
"doc://Nimble/documentation/Nimble/beGreaterThanOrEqualTo(_:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is greater than",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "or equal to the expected value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beGreaterThanOrEqualTo"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beGreaterThanOrEqualTo(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beGreaterThanOrEqualTo(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/begreaterthanorequalto(_:)"
},
"doc://Nimble/documentation/Nimble/beIdenticalTo(_:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is the same instance",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as the expected instance.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beIdenticalTo"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s9AnyObjecta",
      "text" : "AnyObject"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s9AnyObjecta",
      "text" : "AnyObject"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beIdenticalTo(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beIdenticalTo(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beidenticalto(_:)"
},
"doc://Nimble/documentation/Nimble/beLessThan(_:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is less than the expected value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beLessThan"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beLessThan(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beLessThan(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/belessthan(_:)"
},
"doc://Nimble/documentation/Nimble/beLessThanOrEqualTo(_:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is less than",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "or equal to the expected value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beLessThanOrEqualTo"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beLessThanOrEqualTo(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beLessThanOrEqualTo(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/belessthanorequalto(_:)"
},
"doc://Nimble/documentation/Nimble/beNil()": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is nil.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beNil"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beNil()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beNil()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/benil()"
},
"doc://Nimble/documentation/Nimble/beSuccess(_:)-444ip": {
  "abstract" : [
    {
      "text" : "A Nimble matcher for Result that succeeds when the actual value is success",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and the provided matcher matches.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beSuccess"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6ResultO",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beSuccess(_:)-444ip",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beSuccess(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/besuccess(_:)-444ip"
},
"doc://Nimble/documentation/Nimble/beSuccess(_:)-6l09y": {
  "abstract" : [
    {
      "text" : "A Nimble matcher for Result that succeeds when the actual value is success",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and the value inside result is equal to the expected value",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beSuccess"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6ResultO",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beSuccess(_:)-6l09y",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beSuccess(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/besuccess(_:)-6l09y"
},
"doc://Nimble/documentation/Nimble/beSuccess(test:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher for Result that succeeds when the actual value is success.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beSuccess"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "test"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6ResultO",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beSuccess(test:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beSuccess(test:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/besuccess(test:)"
},
"doc://Nimble/documentation/Nimble/beTrue()": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is exactly true.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This matcher will not match against nils.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beTrue"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beTrue()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beTrue()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/betrue()"
},
"doc://Nimble/documentation/Nimble/beTruthy()": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is not logically false.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beTruthy"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beTruthy()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beTruthy()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/betruthy()"
},
"doc://Nimble/documentation/Nimble/beVoid()": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is Void.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beVoid"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<()>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beVoid()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beVoid()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/bevoid()"
},
"doc://Nimble/documentation/Nimble/beWithin(_:)-33vbq": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is within given range.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beWithin"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SN",
      "text" : "ClosedRange"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beWithin(_:)-33vbq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beWithin(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/bewithin(_:)-33vbq"
},
"doc://Nimble/documentation/Nimble/beWithin(_:)-9cwl3": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is within given range.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beWithin"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sn",
      "text" : "Range"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beWithin(_:)-9cwl3",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beWithin(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/bewithin(_:)-9cwl3"
},
"doc://Nimble/documentation/Nimble/beginWith(_:)-1owm0": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual string contains expected substring",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "where the expected substring’s location is zero.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beginWith"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beginWith(_:)-1owm0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beginWith(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beginwith(_:)-1owm0"
},
"doc://Nimble/documentation/Nimble/beginWith(_:)-24tjb": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual collection’s first element",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is equal to the expected object.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beginWith"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble20NMBOrderedCollectionP",
      "text" : "NMBOrderedCollection"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beginWith(_:)-24tjb",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beginWith(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beginwith(_:)-24tjb"
},
"doc://Nimble/documentation/Nimble/beginWith(_:)-25593": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual sequence’s first element",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is equal to the expected value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beginWith"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beginWith(_:)-25593",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beginWith(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beginwith(_:)-25593"
},
"doc://Nimble/documentation/Nimble/beginWith(prefix:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the exepected sequence is a prefix of the actual sequence.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beginWith"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Seq1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Seq2"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "prefix"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Seq2"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Seq1"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beginWith(prefix:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beginWith(prefix:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beginwith(prefix:)"
},
"doc://Nimble/documentation/Nimble/beginWith(prefix:by:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the expected sequence is the prefix of the actual sequence, using the given matcher as the equivalence test.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "beginWith"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Seq1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Seq2"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "prefix"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Seq2"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Seq1"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Seq2"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Seq1"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/beginWith(prefix:by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "beginWith(prefix:by:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/beginwith(prefix:by:)"
},
"doc://Nimble/documentation/Nimble/catchBadInstruction(block:)": {
  "abstract" : [
    {
      "text" : "Run the provided block. If a POSIX SIGILL is received, handle it and return a BadInstructionException (which is just an empty object in this POSIX signal version). Otherwise return nil.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "NOTE: This function is only intended for use in test harnesses – use in a distributed build is almost certainly a bad choice. If a SIGILL is received, the block will be interrupted using a C ",
      "type" : "text"
    },
    {
      "code" : "longjmp",
      "type" : "codeVoice"
    },
    {
      "text" : ". The risks associated with abrupt jumps apply here: most Swift functions are ",
      "type" : "text"
    },
    {
      "inlineContent" : [
        {
          "text" : "not",
          "type" : "text"
        }
      ],
      "type" : "emphasis"
    },
    {
      "text" : " interrupt-safe. Memory may be leaked and the program will not necessarily be left in a safe state.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "catchBadInstruction"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "block"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble23BadInstructionExceptionC",
      "text" : "BadInstructionException"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/catchBadInstruction(block:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "catchBadInstruction(block:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/catchbadinstruction(block:)"
},
"doc://Nimble/documentation/Nimble/contain(_:)-2aowy": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contain"
    },
    {
      "kind" : "text",
      "text" : "(["
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "?]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12NMBContainerP",
      "text" : "NMBContainer"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-2aowy",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contain(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/contain(_:)-2aowy"
},
"doc://Nimble/documentation/Nimble/contain(_:)-3rklc": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual string contains the expected substring.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contain"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-3rklc",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contain(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/contain(_:)-3rklc"
},
"doc://Nimble/documentation/Nimble/contain(_:)-41z5g": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contain"
    },
    {
      "kind" : "text",
      "text" : "(["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-41z5g",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contain(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/contain(_:)-41z5g"
},
"doc://Nimble/documentation/Nimble/contain(_:)-78pt3": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual set contains the expected values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contain"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-78pt3",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contain(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/contain(_:)-78pt3"
},
"doc://Nimble/documentation/Nimble/contain(_:)-862bt": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual string contains the expected substring.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contain"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation8NSStringC",
      "text" : "NSString"
    },
    {
      "kind" : "text",
      "text" : "...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation8NSStringC",
      "text" : "NSString"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-862bt",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contain(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/contain(_:)-862bt"
},
"doc://Nimble/documentation/Nimble/contain(_:)-8fxbb": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual set contains the expected values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contain"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">(["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s10SetAlgebraP7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-8fxbb",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contain(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/contain(_:)-8fxbb"
},
"doc://Nimble/documentation/Nimble/contain(_:)-8sjnq": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual sequence contains the expected values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contain"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-8sjnq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contain(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/contain(_:)-8sjnq"
},
"doc://Nimble/documentation/Nimble/contain(_:)-dgf4": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual sequence contains the expected values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contain"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">(["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-dgf4",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contain(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/contain(_:)-dgf4"
},
"doc://Nimble/documentation/Nimble/contain(_:)-h8gp": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual collection contains the expected object.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contain"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "?...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12NMBContainerP",
      "text" : "NMBContainer"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-h8gp",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contain(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/contain(_:)-h8gp"
},
"doc://Nimble/documentation/Nimble/contain(_:)-owbf": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual set contains the expected values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contain"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s10SetAlgebraP7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-owbf",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contain(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/contain(_:)-owbf"
},
"doc://Nimble/documentation/Nimble/contain(_:)-vjep": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual set contains the expected values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contain"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">(["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-vjep",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contain(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/contain(_:)-vjep"
},
"doc://Nimble/documentation/Nimble/contain(_:)-wfmf": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contain"
    },
    {
      "kind" : "text",
      "text" : "(["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation8NSStringC",
      "text" : "NSString"
    },
    {
      "kind" : "text",
      "text" : "]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation8NSStringC",
      "text" : "NSString"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/contain(_:)-wfmf",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contain(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/contain(_:)-wfmf"
},
"doc://Nimble/documentation/Nimble/containElementSatisfying(_:_:)-44wi3": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "containElementSatisfying"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">((("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : "), "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/containElementSatisfying(_:_:)-44wi3",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "containElementSatisfying(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/containelementsatisfying(_:_:)-44wi3"
},
"doc://Nimble/documentation/Nimble/containElementSatisfying(_:_:)-8omf3": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "containElementSatisfying"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">((("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : "), "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/containElementSatisfying(_:_:)-8omf3",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "containElementSatisfying(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/containelementsatisfying(_:_:)-8omf3"
},
"doc://Nimble/documentation/Nimble/defaultDelta()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultDelta"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "F"
    },
    {
      "kind" : "text",
      "text" : ">() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "F"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/defaultDelta()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "defaultDelta()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/defaultdelta()"
},
"doc://Nimble/documentation/Nimble/elementsEqual(_:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual sequence and the exepected sequence contain the same elements in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the same order.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "elementsEqual"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Seq1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Seq2"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Seq2"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Seq1"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/elementsEqual(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "elementsEqual(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/elementsequal(_:)"
},
"doc://Nimble/documentation/Nimble/elementsEqual(_:by:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual sequence and the exepected sequence contain equivalent elements in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the same order, using the given matcher as the equivalence test.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "elementsEqual"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Seq1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Seq2"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Seq2"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Seq1"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Seq2"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Seq1"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/elementsEqual(_:by:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "elementsEqual(_:by:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/elementsequal(_:by:)"
},
"doc://Nimble/documentation/Nimble/endWith(_:)-20hcx": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual string contains the expected substring",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "where the expected substring’s location is the actual string’s length minus the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "expected substring’s length.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "endWith"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/endWith(_:)-20hcx",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "endWith(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/endwith(_:)-20hcx"
},
"doc://Nimble/documentation/Nimble/endWith(_:)-4n6y3": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual collection’s last element",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is equal to the expected object.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "endWith"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble20NMBOrderedCollectionP",
      "text" : "NMBOrderedCollection"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/endWith(_:)-4n6y3",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "endWith(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/endwith(_:)-4n6y3"
},
"doc://Nimble/documentation/Nimble/endWith(_:)-6f0ul": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual sequence’s last element",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is equal to the expected value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "endWith"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST7ElementQa",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/endWith(_:)-6f0ul",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "endWith(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/endwith(_:)-6f0ul"
},
"doc://Nimble/documentation/Nimble/equal(_:)-1jkdb": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual dictionary is equal to the expected dictionary",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "K"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "V"
    },
    {
      "kind" : "text",
      "text" : ">(["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "K"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "V"
    },
    {
      "kind" : "text",
      "text" : "?]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "K"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "V"
    },
    {
      "kind" : "text",
      "text" : "]>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-1jkdb",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-1jkdb"
},
"doc://Nimble/documentation/Nimble/equal(_:)-29m3q": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual array of tuples is equal to the expected array of tuples.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Values can support equal by supporting the Equatable protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ">([("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")]?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")]>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-29m3q",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-29m3q"
},
"doc://Nimble/documentation/Nimble/equal(_:)-2k2k5": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual tuple is equal to the expected tuple.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Values can support equal by supporting the Equatable protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-2k2k5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-2k2k5"
},
"doc://Nimble/documentation/Nimble/equal(_:)-4jb77": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual tuple is equal to the expected tuple.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Values can support equal by supporting the Equatable protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-4jb77",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-4jb77"
},
"doc://Nimble/documentation/Nimble/equal(_:)-4uzmz": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is equal to the expected value.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Values can support equal by supporting the Equatable protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-4uzmz",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-4uzmz"
},
"doc://Nimble/documentation/Nimble/equal(_:)-4vzd2": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual set is equal to the expected set.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-4vzd2",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-4vzd2"
},
"doc://Nimble/documentation/Nimble/equal(_:)-4w4xq": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual array of tuples is equal to the expected array of tuples.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Values can support equal by supporting the Equatable protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ">([("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")]?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")]>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-4w4xq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-4w4xq"
},
"doc://Nimble/documentation/Nimble/equal(_:)-4zxpx": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual array of tuples is equal to the expected array of tuples.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Values can support equal by supporting the Equatable protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ">([("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")]?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ")]>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-4zxpx",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-4zxpx"
},
"doc://Nimble/documentation/Nimble/equal(_:)-5fne6": {
  "abstract" : [
    {
      "text" : "A Nimble matcher allowing comparison of collection with optional type",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">(["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?]>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-5fne6",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-5fne6"
},
"doc://Nimble/documentation/Nimble/equal(_:)-63nh8": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual array of tuples is equal to the expected array of tuples.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Values can support equal by supporting the Equatable protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ">([("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")]?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")]>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-63nh8",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-63nh8"
},
"doc://Nimble/documentation/Nimble/equal(_:)-6p8q5": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual set is equal to the expected set.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-6p8q5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-6p8q5"
},
"doc://Nimble/documentation/Nimble/equal(_:)-6ymip": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual tuple is equal to the expected tuple.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Values can support equal by supporting the Equatable protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ")>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-6ymip",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-6ymip"
},
"doc://Nimble/documentation/Nimble/equal(_:)-7j9dn": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual set is equal to the expected set.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-7j9dn",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-7j9dn"
},
"doc://Nimble/documentation/Nimble/equal(_:)-95y6m": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual tuple is equal to the expected tuple.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Values can support equal by supporting the Equatable protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ")>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-95y6m",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-95y6m"
},
"doc://Nimble/documentation/Nimble/equal(_:)-96tj4": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual tuple is equal to the expected tuple.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Values can support equal by supporting the Equatable protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-96tj4",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-96tj4"
},
"doc://Nimble/documentation/Nimble/equal(_:)-9l2si": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual set is equal to the expected set.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-9l2si",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-9l2si"
},
"doc://Nimble/documentation/Nimble/equal(_:)-fpzg": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual array of tuples is equal to the expected array of tuples.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Values can support equal by supporting the Equatable protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ">([("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")]?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<[("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T3"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T4"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T5"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T6"
    },
    {
      "kind" : "text",
      "text" : ")]>"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-fpzg",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-fpzg"
},
"doc://Nimble/documentation/Nimble/equal(_:)-t0mf": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value is equal to the expected value.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Values can support equal by supporting the Equatable protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "equal"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/equal(_:)-t0mf",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "equal(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/equal(_:)-t0mf"
},
"doc://Nimble/documentation/Nimble/expect(fileID:file:line:column:_:)-2csqt": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expect"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-2csqt",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expect(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expect(fileid:file:line:column:_:)-2csqt"
},
"doc://Nimble/documentation/Nimble/expect(fileID:file:line:column:_:)-38guh": {
  "abstract" : [
    {
      "text" : "Make an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expect"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-38guh",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expect(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expect(fileid:file:line:column:_:)-38guh"
},
"doc://Nimble/documentation/Nimble/expect(fileID:file:line:column:_:)-3g2l0": {
  "abstract" : [
    {
      "text" : "Make an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expect"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-3g2l0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expect(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expect(fileid:file:line:column:_:)-3g2l0"
},
"doc://Nimble/documentation/Nimble/expect(fileID:file:line:column:_:)-6jipk": {
  "abstract" : [
    {
      "text" : "Make an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expect"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-6jipk",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expect(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expect(fileid:file:line:column:_:)-6jipk"
},
"doc://Nimble/documentation/Nimble/expect(fileID:file:line:column:_:)-7mlr2": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The value given is lazily evaluated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expect"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-7mlr2",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expect(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expect(fileid:file:line:column:_:)-7mlr2"
},
"doc://Nimble/documentation/Nimble/expect(fileID:file:line:column:_:)-7npqm": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expect"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-7npqm",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expect(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expect(fileid:file:line:column:_:)-7npqm"
},
"doc://Nimble/documentation/Nimble/expect(fileID:file:line:column:_:)-7yk0h": {
  "abstract" : [
    {
      "text" : "Make an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The value given is lazily evaluated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expect"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-7yk0h",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expect(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expect(fileid:file:line:column:_:)-7yk0h"
},
"doc://Nimble/documentation/Nimble/expect(fileID:file:line:column:_:)-kv1j": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expect"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expect(fileID:file:line:column:_:)-kv1j",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expect(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expect(fileid:file:line:column:_:)-kv1j"
},
"doc://Nimble/documentation/Nimble/expecta(fileID:file:line:column:_:)-1uq4t": {
  "abstract" : [
    {
      "text" : "Make an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The value given is lazily evaluated.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This is provided to avoid  confusion between ",
      "type" : "text"
    },
    {
      "code" : "expect -> SyncExpectation",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "expect -> AsyncExpectation",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expecta"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expecta(fileID:file:line:column:_:)-1uq4t",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expecta(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expecta(fileid:file:line:column:_:)-1uq4t"
},
"doc://Nimble/documentation/Nimble/expecta(fileID:file:line:column:_:)-2qkcj": {
  "abstract" : [
    {
      "text" : "Make an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This is provided to avoid  confusion between ",
      "type" : "text"
    },
    {
      "code" : "expect -> SyncExpectation",
      "type" : "codeVoice"
    },
    {
      "text" : "  and ",
      "type" : "text"
    },
    {
      "code" : "expect -> AsyncExpectation",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expecta"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expecta(fileID:file:line:column:_:)-2qkcj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expecta(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expecta(fileid:file:line:column:_:)-2qkcj"
},
"doc://Nimble/documentation/Nimble/expecta(fileID:file:line:column:_:)-93s8c": {
  "abstract" : [
    {
      "text" : "Make an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This is provided to avoid  confusion between ",
      "type" : "text"
    },
    {
      "code" : "expect -> SyncExpectation",
      "type" : "codeVoice"
    },
    {
      "text" : "  and ",
      "type" : "text"
    },
    {
      "code" : "expect -> AsyncExpectation",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expecta"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expecta(fileID:file:line:column:_:)-93s8c",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expecta(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expecta(fileid:file:line:column:_:)-93s8c"
},
"doc://Nimble/documentation/Nimble/expecta(fileID:file:line:column:_:)-vzn5": {
  "abstract" : [
    {
      "text" : "Make an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This is provided to avoid  confusion between ",
      "type" : "text"
    },
    {
      "code" : "expect -> SyncExpectation",
      "type" : "codeVoice"
    },
    {
      "text" : "  and ",
      "type" : "text"
    },
    {
      "code" : "expect -> AsyncExpectation",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expecta"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncExpectationV",
      "text" : "AsyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expecta(fileID:file:line:column:_:)-vzn5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expecta(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expecta(fileid:file:line:column:_:)-vzn5"
},
"doc://Nimble/documentation/Nimble/expects(fileID:file:line:column:_:)-223fj": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This is provided as an alternative to ",
      "type" : "text"
    },
    {
      "code" : "expect",
      "type" : "codeVoice"
    },
    {
      "text" : " which avoids overloading with ",
      "type" : "text"
    },
    {
      "code" : "expect -> AsyncExpectation",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expects"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expects(fileID:file:line:column:_:)-223fj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expects(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expects(fileid:file:line:column:_:)-223fj"
},
"doc://Nimble/documentation/Nimble/expects(fileID:file:line:column:_:)-3mc9y": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This is provided as an alternative to ",
      "type" : "text"
    },
    {
      "code" : "expect",
      "type" : "codeVoice"
    },
    {
      "text" : " which avoids overloading with ",
      "type" : "text"
    },
    {
      "code" : "expect -> AsyncExpectation",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expects"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expects(fileID:file:line:column:_:)-3mc9y",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expects(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expects(fileid:file:line:column:_:)-3mc9y"
},
"doc://Nimble/documentation/Nimble/expects(fileID:file:line:column:_:)-3v8dw": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The value given is lazily evaluated.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This is provided as an alternative to ",
      "type" : "text"
    },
    {
      "code" : "expect",
      "type" : "codeVoice"
    },
    {
      "text" : " which avoids overloading with ",
      "type" : "text"
    },
    {
      "code" : "expect -> AsyncExpectation",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expects"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expects(fileID:file:line:column:_:)-3v8dw",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expects(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expects(fileid:file:line:column:_:)-3v8dw"
},
"doc://Nimble/documentation/Nimble/expects(fileID:file:line:column:_:)-xhbq": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncExpectation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This is provided as an alternative to ",
      "type" : "text"
    },
    {
      "code" : "expect",
      "type" : "codeVoice"
    },
    {
      "text" : " which avoids overloading with ",
      "type" : "text"
    },
    {
      "code" : "expect -> AsyncExpectation",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expects"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncExpectationV",
      "text" : "SyncExpectation"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/expects(fileID:file:line:column:_:)-xhbq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expects(fileID:file:line:column:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/expects(fileid:file:line:column:_:)-xhbq"
},
"doc://Nimble/documentation/Nimble/fail(_:fileID:file:line:column:)": {
  "abstract" : [
    {
      "text" : "Always fails the test with a message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "fail"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/fail(_:fileID:file:line:column:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "fail(_:fileID:file:line:column:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/fail(_:fileid:file:line:column:)"
},
"doc://Nimble/documentation/Nimble/fail(_:location:)": {
  "abstract" : [
    {
      "text" : "Always fails the test with a message and a specified location.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "fail"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "location"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble14SourceLocationC",
      "text" : "SourceLocation"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/fail(_:location:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "fail(_:location:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/fail(_:location:)"
},
"doc://Nimble/documentation/Nimble/fail(fileID:file:line:column:)": {
  "abstract" : [
    {
      "text" : "Always fails the test.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "fail"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/fail(fileID:file:line:column:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "fail(fileID:file:line:column:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/fail(fileid:file:line:column:)"
},
"doc://Nimble/documentation/Nimble/gatherExpectations(silently:closure:)-2po6t": {
  "abstract" : [
    {
      "text" : "Captures expectations that occur in the given closure. Note that all",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "expectations will still go through to the default Nimble handler.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "gatherExpectations"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "silently"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "closure"
    },
    {
      "kind" : "text",
      "text" : ": () "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15AssertionRecordV",
      "text" : "AssertionRecord"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/gatherExpectations(silently:closure:)-2po6t",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "gatherExpectations(silently:closure:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/gatherexpectations(silently:closure:)-2po6t"
},
"doc://Nimble/documentation/Nimble/gatherExpectations(silently:closure:)-75ohy": {
  "abstract" : [
    {
      "text" : "Captures expectations that occur in the given closure. Note that all",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "expectations will still go through to the default Nimble handler.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "gatherExpectations"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "silently"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "closure"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15AssertionRecordV",
      "text" : "AssertionRecord"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/gatherExpectations(silently:closure:)-75ohy",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "gatherExpectations(silently:closure:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/gatherexpectations(silently:closure:)-75ohy"
},
"doc://Nimble/documentation/Nimble/gatherFailingExpectations(silently:closure:)-2g14s": {
  "abstract" : [
    {
      "text" : "Captures failed expectations that occur in the given closure. Note that all",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "expectations will still go through to the default Nimble handler.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "gatherFailingExpectations"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "silently"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "closure"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15AssertionRecordV",
      "text" : "AssertionRecord"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/gatherFailingExpectations(silently:closure:)-2g14s",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "gatherFailingExpectations(silently:closure:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/gatherfailingexpectations(silently:closure:)-2g14s"
},
"doc://Nimble/documentation/Nimble/gatherFailingExpectations(silently:closure:)-30gyn": {
  "abstract" : [
    {
      "text" : "Captures failed expectations that occur in the given closure. Note that all",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "expectations will still go through to the default Nimble handler.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "gatherFailingExpectations"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "silently"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "closure"
    },
    {
      "kind" : "text",
      "text" : ": () "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15AssertionRecordV",
      "text" : "AssertionRecord"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/gatherFailingExpectations(silently:closure:)-30gyn",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "gatherFailingExpectations(silently:closure:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/gatherfailingexpectations(silently:closure:)-30gyn"
},
"doc://Nimble/documentation/Nimble/haveCount(_:)-5t6dt": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual collection’s count equals",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the expected value",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "haveCount"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble13NMBCollectionP",
      "text" : "NMBCollection"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/haveCount(_:)-5t6dt",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "haveCount(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/havecount(_:)-5t6dt"
},
"doc://Nimble/documentation/Nimble/haveCount(_:)-d79t": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual Collection’s count equals",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the expected value",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "haveCount"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/haveCount(_:)-d79t",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "haveCount(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/havecount(_:)-d79t"
},
"doc://Nimble/documentation/Nimble/map(_:_:)-5l17g": {
  "abstract" : [
    {
      "code" : "map",
      "type" : "codeVoice"
    },
    {
      "text" : " works by transforming the expression to a value that the given matcher uses.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "U"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "U"
    },
    {
      "kind" : "text",
      "text" : ", some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncableMatcherP",
      "text" : "AsyncableMatcher"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/map(_:_:)-5l17g",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "map(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/map(_:_:)-5l17g"
},
"doc://Nimble/documentation/Nimble/map(_:_:)-6ykjm": {
  "abstract" : [
    {
      "code" : "map",
      "type" : "codeVoice"
    },
    {
      "text" : " works by transforming the expression to a value that the given matcher uses.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "U"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "U"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "U"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/map(_:_:)-6ykjm",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "map(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/map(_:_:)-6ykjm"
},
"doc://Nimble/documentation/Nimble/match(_:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual string satisfies the regular expression",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "described by the expected string.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "match"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/match(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "match(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/match(_:)"
},
"doc://Nimble/documentation/Nimble/matchError(_:)-4geex": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual expression evaluates to an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "error from the specified case.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "matchError"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/matchError(_:)-4geex",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "matchError(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/matcherror(_:)-4geex"
},
"doc://Nimble/documentation/Nimble/matchError(_:)-6jywp": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual expression evaluates to an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "error of the specified type",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "matchError"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ".Type) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/matchError(_:)-6jywp",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "matchError(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/matcherror(_:)-6jywp"
},
"doc://Nimble/documentation/Nimble/matchError(_:)-8o974": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual expression evaluates to an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "error from the specified case.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "matchError"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/matchError(_:)-8o974",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "matchError(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/matcherror(_:)-8o974"
},
"doc://Nimble/documentation/Nimble/not(_:)-373ex": {
  "abstract" : [
    {
      "text" : "A matcher that negates the passed in matcher",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "not"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/not(_:)-373ex",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "not(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/not(_:)-373ex"
},
"doc://Nimble/documentation/Nimble/not(_:)-76gnj": {
  "abstract" : [
    {
      "text" : "A matcher that negates the passed in matcher",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "not"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/not(_:)-76gnj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "not(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/not(_:)-76gnj"
},
"doc://Nimble/documentation/Nimble/pollUnwrap(file:line:_:)-16s5w": {
  "abstract" : [
    {
      "text" : "Makes sure that the async expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "requirea(expression).toEventuallyNot(beNil())",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pollUnwrap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwrap(file:line:_:)-16s5w",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "pollUnwrap(file:line:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/pollunwrap(file:line:_:)-16s5w"
},
"doc://Nimble/documentation/Nimble/pollUnwrap(file:line:_:)-3fmx1": {
  "abstract" : [
    {
      "text" : "Makes sure that the async expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "requirea(expression).toEventuallyNot(beNil())",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pollUnwrap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwrap(file:line:_:)-3fmx1",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "pollUnwrap(file:line:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/pollunwrap(file:line:_:)-3fmx1"
},
"doc://Nimble/documentation/Nimble/pollUnwrap(file:line:_:)-3yd3y": {
  "abstract" : [
    {
      "text" : "Makes sure that the expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "require(expression).toEventuallyNot(beNil())",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pollUnwrap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwrap(file:line:_:)-3yd3y",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "pollUnwrap(file:line:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/pollunwrap(file:line:_:)-3yd3y"
},
"doc://Nimble/documentation/Nimble/pollUnwrap(file:line:_:)-60bfs": {
  "abstract" : [
    {
      "text" : "Makes sure that the expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "require(expression).toEventuallyNot(beNil())",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pollUnwrap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwrap(file:line:_:)-60bfs",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "pollUnwrap(file:line:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/pollunwrap(file:line:_:)-60bfs"
},
"doc://Nimble/documentation/Nimble/pollUnwrapa(file:line:_:)-2vokl": {
  "abstract" : [
    {
      "text" : "Makes sure that the async expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "requirea(expression).toEventuallyNot(beNil())",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pollUnwrapa"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwrapa(file:line:_:)-2vokl",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "pollUnwrapa(file:line:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/pollunwrapa(file:line:_:)-2vokl"
},
"doc://Nimble/documentation/Nimble/pollUnwrapa(file:line:_:)-5jamj": {
  "abstract" : [
    {
      "text" : "Makes sure that the async expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "requirea(expression).toEventuallyNot(beNil())",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pollUnwrapa"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwrapa(file:line:_:)-5jamj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "pollUnwrapa(file:line:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/pollunwrapa(file:line:_:)-5jamj"
},
"doc://Nimble/documentation/Nimble/pollUnwraps(file:line:_:)-3jrcn": {
  "abstract" : [
    {
      "text" : "Makes sure that the expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "require(expression).toEventuallyNot(beNil())",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pollUnwraps"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwraps(file:line:_:)-3jrcn",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "pollUnwraps(file:line:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/pollunwraps(file:line:_:)-3jrcn"
},
"doc://Nimble/documentation/Nimble/pollUnwraps(file:line:_:)-52c5x": {
  "abstract" : [
    {
      "text" : "Makes sure that the expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "require(expression).toEventuallyNot(beNil())",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pollUnwraps"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/pollUnwraps(file:line:_:)-52c5x",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "pollUnwraps(file:line:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/pollunwraps(file:line:_:)-52c5x"
},
"doc://Nimble/documentation/Nimble/postNotifications(_:from:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "postNotifications"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation12NotificationV",
      "text" : "Notification"
    },
    {
      "kind" : "text",
      "text" : "]>, "
    },
    {
      "kind" : "externalParam",
      "text" : "from"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation18NotificationCenterC",
      "text" : "NotificationCenter"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/postNotifications(_:from:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "postNotifications(_:from:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/postnotifications(_:from:)"
},
"doc://Nimble/documentation/Nimble/prettyCollectionType(_:)-3wxmq": {
  "abstract" : [
    {
      "text" : "Attempts to generate a pretty type string for a given value. If the value is of a Objective-C",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "collection type, or a subclass thereof, (e.g. ",
      "type" : "text"
    },
    {
      "code" : "NSArray",
      "type" : "codeVoice"
    },
    {
      "text" : ", ",
      "type" : "text"
    },
    {
      "code" : "NSDictionary",
      "type" : "codeVoice"
    },
    {
      "text" : ", etc.).",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This function will return the type name of the root class of the class cluster for better",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "readability (e.g. ",
      "type" : "text"
    },
    {
      "code" : "NSArray",
      "type" : "codeVoice"
    },
    {
      "text" : " instead of ",
      "type" : "text"
    },
    {
      "code" : "__NSArrayI",
      "type" : "codeVoice"
    },
    {
      "text" : ").",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "prettyCollectionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/prettyCollectionType(_:)-3wxmq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "prettyCollectionType(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/prettycollectiontype(_:)-3wxmq"
},
"doc://Nimble/documentation/Nimble/prettyCollectionType(_:)-8eo0q": {
  "abstract" : [
    {
      "text" : "Returns the type name for a given collection type. This overload is used by Swift",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "collection types.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "prettyCollectionType"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/prettyCollectionType(_:)-8eo0q",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "prettyCollectionType(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/prettycollectiontype(_:)-8eo0q"
},
"doc://Nimble/documentation/Nimble/recordFailure(_:location:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "recordFailure"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "location"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble14SourceLocationC",
      "text" : "SourceLocation"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/recordFailure(_:location:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "recordFailure(_:location:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/recordfailure(_:location:)"
},
"doc://Nimble/documentation/Nimble/recordTestingFailure(_:location:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "recordTestingFailure"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "location"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble14SourceLocationC",
      "text" : "SourceLocation"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/recordTestingFailure(_:location:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "recordTestingFailure(_:location:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/recordtestingfailure(_:location:)"
},
"doc://Nimble/documentation/Nimble/require(fileID:file:line:column:customError:_:)-44yvd": {
  "abstract" : [
    {
      "text" : "Make an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "require"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncRequirementV",
      "text" : "AsyncRequirement"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/require(fileID:file:line:column:customError:_:)-44yvd",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "require(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/require(fileid:file:line:column:customerror:_:)-44yvd"
},
"doc://Nimble/documentation/Nimble/require(fileID:file:line:column:customError:_:)-570ic": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncRequirement",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "require"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncRequirementV",
      "text" : "SyncRequirement"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/require(fileID:file:line:column:customError:_:)-570ic",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "require(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/require(fileid:file:line:column:customerror:_:)-570ic"
},
"doc://Nimble/documentation/Nimble/require(fileID:file:line:column:customError:_:)-5u5iq": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncRequirement",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "require"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncRequirementV",
      "text" : "SyncRequirement"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/require(fileID:file:line:column:customError:_:)-5u5iq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "require(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/require(fileid:file:line:column:customerror:_:)-5u5iq"
},
"doc://Nimble/documentation/Nimble/require(fileID:file:line:column:customError:_:)-9jsi5": {
  "abstract" : [
    {
      "text" : "Make an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "require"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncRequirementV",
      "text" : "AsyncRequirement"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/require(fileID:file:line:column:customError:_:)-9jsi5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "require(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/require(fileid:file:line:column:customerror:_:)-9jsi5"
},
"doc://Nimble/documentation/Nimble/require(fileID:file:line:column:customError:_:)-9sdlg": {
  "abstract" : [
    {
      "text" : "Make an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The value given is lazily evaluated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "require"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncRequirementV",
      "text" : "AsyncRequirement"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/require(fileID:file:line:column:customError:_:)-9sdlg",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "require(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/require(fileid:file:line:column:customerror:_:)-9sdlg"
},
"doc://Nimble/documentation/Nimble/require(fileID:file:line:column:customError:_:)-thjs": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncRequirement",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "require"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncRequirementV",
      "text" : "SyncRequirement"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/require(fileID:file:line:column:customError:_:)-thjs",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "require(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/require(fileid:file:line:column:customerror:_:)-thjs"
},
"doc://Nimble/documentation/Nimble/require(fileID:file:line:column:customError:_:)-zz76": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncRequirement",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The value given is lazily evaluated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "require"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncRequirementV",
      "text" : "SyncRequirement"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/require(fileID:file:line:column:customError:_:)-zz76",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "require(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/require(fileid:file:line:column:customerror:_:)-zz76"
},
"doc://Nimble/documentation/Nimble/requirea(fileID:file:line:column:customError:_:)-16re8": {
  "abstract" : [
    {
      "text" : "Make an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The value given is lazily evaluated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "requirea"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncRequirementV",
      "text" : "AsyncRequirement"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/requirea(fileID:file:line:column:customError:_:)-16re8",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "requirea(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/requirea(fileid:file:line:column:customerror:_:)-16re8"
},
"doc://Nimble/documentation/Nimble/requirea(fileID:file:line:column:customError:_:)-7p1cv": {
  "abstract" : [
    {
      "text" : "Make an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "requirea"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncRequirementV",
      "text" : "AsyncRequirement"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/requirea(fileID:file:line:column:customError:_:)-7p1cv",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "requirea(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/requirea(fileid:file:line:column:customerror:_:)-7p1cv"
},
"doc://Nimble/documentation/Nimble/requirea(fileID:file:line:column:customError:_:)-jk6": {
  "abstract" : [
    {
      "text" : "Make an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/AsyncRequirement",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "requirea"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncRequirementV",
      "text" : "AsyncRequirement"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/requirea(fileID:file:line:column:customError:_:)-jk6",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "requirea(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/requirea(fileid:file:line:column:customerror:_:)-jk6"
},
"doc://Nimble/documentation/Nimble/requires(fileID:file:line:column:customError:_:)-2n16l": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncRequirement",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The value given is lazily evaluated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "requires"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncRequirementV",
      "text" : "SyncRequirement"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/requires(fileID:file:line:column:customError:_:)-2n16l",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "requires(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/requires(fileid:file:line:column:customerror:_:)-2n16l"
},
"doc://Nimble/documentation/Nimble/requires(fileID:file:line:column:customError:_:)-2vg8e": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncRequirement",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "requires"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncRequirementV",
      "text" : "SyncRequirement"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/requires(fileID:file:line:column:customError:_:)-2vg8e",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "requires(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/requires(fileid:file:line:column:customerror:_:)-2vg8e"
},
"doc://Nimble/documentation/Nimble/requires(fileID:file:line:column:customError:_:)-3rcmb": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncRequirement",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "requires"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncRequirementV",
      "text" : "SyncRequirement"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/requires(fileID:file:line:column:customError:_:)-3rcmb",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "requires(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/requires(fileid:file:line:column:customerror:_:)-3rcmb"
},
"doc://Nimble/documentation/Nimble/requires(fileID:file:line:column:customError:_:)-58jfw": {
  "abstract" : [
    {
      "text" : "Make a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/SyncRequirement",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " on a given actual value. The closure is lazily invoked.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "requires"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15SyncRequirementV",
      "text" : "SyncRequirement"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/requires(fileID:file:line:column:customError:_:)-58jfw",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "requires(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/requires(fileid:file:line:column:customerror:_:)-58jfw"
},
"doc://Nimble/documentation/Nimble/satisfyAllOf(_:)-2npr5": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value matches with all of the matchers",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "provided in the array of matchers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "satisfyAllOf"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">([any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncableMatcherP",
      "text" : "AsyncableMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAllOf(_:)-2npr5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "satisfyAllOf(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/satisfyallof(_:)-2npr5"
},
"doc://Nimble/documentation/Nimble/satisfyAllOf(_:)-99ble": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value matches with all of the matchers",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "provided in the variable list of matchers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "satisfyAllOf"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">(any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncableMatcherP",
      "text" : "AsyncableMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAllOf(_:)-99ble",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "satisfyAllOf(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/satisfyallof(_:)-99ble"
},
"doc://Nimble/documentation/Nimble/satisfyAllOf(_:)-nprr": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value matches with all of the matchers",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "provided in the array of matchers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "satisfyAllOf"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">(["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAllOf(_:)-nprr",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "satisfyAllOf(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/satisfyallof(_:)-nprr"
},
"doc://Nimble/documentation/Nimble/satisfyAllOf(_:)-x0z5": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value matches with all of the matchers",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "provided in the variable list of matchers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "satisfyAllOf"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAllOf(_:)-x0z5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "satisfyAllOf(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/satisfyallof(_:)-x0z5"
},
"doc://Nimble/documentation/Nimble/satisfyAnyOf(_:)-3q3xr": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value matches with any of the matchers",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "provided in the variable list of matchers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "satisfyAnyOf"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAnyOf(_:)-3q3xr",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "satisfyAnyOf(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/satisfyanyof(_:)-3q3xr"
},
"doc://Nimble/documentation/Nimble/satisfyAnyOf(_:)-7m952": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value matches with any of the matchers",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "provided in the array of matchers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "satisfyAnyOf"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">([any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncableMatcherP",
      "text" : "AsyncableMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAnyOf(_:)-7m952",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "satisfyAnyOf(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/satisfyanyof(_:)-7m952"
},
"doc://Nimble/documentation/Nimble/satisfyAnyOf(_:)-8groo": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value matches with any of the matchers",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "provided in the variable list of matchers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "satisfyAnyOf"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">(any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AsyncableMatcherP",
      "text" : "AsyncableMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">...) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble12AsyncMatcherV",
      "text" : "AsyncMatcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAnyOf(_:)-8groo",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "satisfyAnyOf(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/satisfyanyof(_:)-8groo"
},
"doc://Nimble/documentation/Nimble/satisfyAnyOf(_:)-8yumz": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual value matches with any of the matchers",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "provided in the array of matchers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "satisfyAnyOf"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">(["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">]) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/satisfyAnyOf(_:)-8yumz",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "satisfyAnyOf(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/satisfyanyof(_:)-8yumz"
},
"doc://Nimble/documentation/Nimble/stringify(_:)": {
  "abstract" : [
    {
      "text" : "Returns a string appropriate for displaying in test output",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "from the provided value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stringify"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/stringify(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stringify(_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/stringify(_:)"
},
"doc://Nimble/documentation/Nimble/succeed()": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that takes in a closure for validation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "succeed"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble15ToSucceedResultO",
      "text" : "ToSucceedResult"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/succeed()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "succeed()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/succeed()"
},
"doc://Nimble/documentation/Nimble/throwAssertion()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "throwAssertion"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/throwAssertion()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "throwAssertion()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/throwassertion()"
},
"doc://Nimble/documentation/Nimble/throwError()": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual expression throws an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "error of the specified type or from the specified case.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "throwError"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/throwError()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "throwError()",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/throwerror()"
},
"doc://Nimble/documentation/Nimble/throwError(_:closure:)-bepw": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual expression throws an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "error of the specified type or from the specified case.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "throwError"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "closure"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/throwError(_:closure:)-bepw",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "throwError(_:closure:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/throwerror(_:closure:)-bepw"
},
"doc://Nimble/documentation/Nimble/throwError(_:closure:)-phyk": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual expression throws an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "error of the specified type or from the specified case.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "throwError"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "closure"
    },
    {
      "kind" : "text",
      "text" : ": ((any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/throwError(_:closure:)-phyk",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "throwError(_:closure:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/throwerror(_:closure:)-phyk"
},
"doc://Nimble/documentation/Nimble/throwError(closure:)-2uav9": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual expression throws any",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "error or when the passed closures’ arbitrary custom matching succeeds.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "throwError"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "closure"
    },
    {
      "kind" : "text",
      "text" : ": ((any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/throwError(closure:)-2uav9",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "throwError(closure:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/throwerror(closure:)-2uav9"
},
"doc://Nimble/documentation/Nimble/throwError(closure:)-6lkaq": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual expression throws any",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "error or when the passed closures’ arbitrary custom matching succeeds.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "throwError"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "closure"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/throwError(closure:)-6lkaq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "throwError(closure:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/throwerror(closure:)-6lkaq"
},
"doc://Nimble/documentation/Nimble/throwError(errorType:closure:)": {
  "abstract" : [
    {
      "text" : "A Nimble matcher that succeeds when the actual expression throws an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "error of the specified type or from the specified case.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "throwError"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "errorType"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ".Type, "
    },
    {
      "kind" : "externalParam",
      "text" : "closure"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble7MatcherV",
      "text" : "Matcher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Out"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/throwError(errorType:closure:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "throwError(errorType:closure:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/throwerror(errortype:closure:)"
},
"doc://Nimble/documentation/Nimble/unwrap(fileID:file:line:column:customError:_:)-2pedm": {
  "abstract" : [
    {
      "text" : "Makes sure that the expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "require(expression).toNot(beNil())",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unwrap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/unwrap(fileID:file:line:column:customError:_:)-2pedm",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unwrap(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/unwrap(fileid:file:line:column:customerror:_:)-2pedm"
},
"doc://Nimble/documentation/Nimble/unwrap(fileID:file:line:column:customError:_:)-3w5pp": {
  "abstract" : [
    {
      "text" : "Makes sure that the async expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "requirea(expression).toNot(beNil())",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unwrap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/unwrap(fileID:file:line:column:customError:_:)-3w5pp",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unwrap(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/unwrap(fileid:file:line:column:customerror:_:)-3w5pp"
},
"doc://Nimble/documentation/Nimble/unwrap(fileID:file:line:column:customError:_:)-7bq8w": {
  "abstract" : [
    {
      "text" : "Makes sure that the async expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "requirea(expression).toNot(beNil())",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unwrap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/unwrap(fileID:file:line:column:customError:_:)-7bq8w",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unwrap(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/unwrap(fileid:file:line:column:customerror:_:)-7bq8w"
},
"doc://Nimble/documentation/Nimble/unwrap(fileID:file:line:column:customError:_:)-94o04": {
  "abstract" : [
    {
      "text" : "Makes sure that the expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "require(expression).toNot(beNil())",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unwrap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/unwrap(fileID:file:line:column:customError:_:)-94o04",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unwrap(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/unwrap(fileid:file:line:column:customerror:_:)-94o04"
},
"doc://Nimble/documentation/Nimble/unwrapa(fileID:file:line:column:customError:_:)-430og": {
  "abstract" : [
    {
      "text" : "Makes sure that the async expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "requirea(expression).toNot(beNil())",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unwrapa"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/unwrapa(fileID:file:line:column:customError:_:)-430og",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unwrapa(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/unwrapa(fileid:file:line:column:customerror:_:)-430og"
},
"doc://Nimble/documentation/Nimble/unwrapa(fileID:file:line:column:customError:_:)-ncpb": {
  "abstract" : [
    {
      "text" : "Makes sure that the async expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "requirea(expression).toNot(beNil())",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unwrapa"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/unwrapa(fileID:file:line:column:customError:_:)-ncpb",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unwrapa(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/unwrapa(fileid:file:line:column:customerror:_:)-ncpb"
},
"doc://Nimble/documentation/Nimble/unwraps(fileID:file:line:column:customError:_:)-8qogi": {
  "abstract" : [
    {
      "text" : "Makes sure that the expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "require(expression).toNot(beNil())",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unwraps"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/unwraps(fileID:file:line:column:customError:_:)-8qogi",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unwraps(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/unwraps(fileid:file:line:column:customerror:_:)-8qogi"
},
"doc://Nimble/documentation/Nimble/unwraps(fileID:file:line:column:customError:_:)-ayfw": {
  "abstract" : [
    {
      "text" : "Makes sure that the expression evaluates to a non-nil value, otherwise throw an error.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "As you can tell, this is a much less verbose equivalent to ",
      "type" : "text"
    },
    {
      "code" : "require(expression).toNot(beNil())",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unwraps"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "customError"
    },
    {
      "kind" : "text",
      "text" : ": (any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ")?, () -> (() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?)) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/unwraps(fileID:file:line:column:customError:_:)-ayfw",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unwraps(fileID:file:line:column:customError:_:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/unwraps(fileid:file:line:column:customerror:_:)-ayfw"
},
"doc://Nimble/documentation/Nimble/waitUntil(timeout:fileID:file:line:column:action:)-5ski": {
  "abstract" : [
    {
      "text" : "Wait asynchronously until the done closure is called or the timeout has been reached.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "waitUntil"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "timeout"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "action"
    },
    {
      "kind" : "text",
      "text" : ": (() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/waitUntil(timeout:fileID:file:line:column:action:)-5ski",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "waitUntil(timeout:fileID:file:line:column:action:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/waituntil(timeout:fileid:file:line:column:action:)-5ski"
},
"doc://Nimble/documentation/Nimble/waitUntil(timeout:fileID:file:line:column:action:)-6pzxs": {
  "abstract" : [
    {
      "text" : "Wait asynchronously until the done closure is called or the timeout has been reached.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "waitUntil"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "timeout"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "action"
    },
    {
      "kind" : "text",
      "text" : ": (() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/waitUntil(timeout:fileID:file:line:column:action:)-6pzxs",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "waitUntil(timeout:fileID:file:line:column:action:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/waituntil(timeout:fileid:file:line:column:action:)-6pzxs"
},
"doc://Nimble/documentation/Nimble/waitUntil(timeout:fileID:file:line:column:action:)-8j9ew": {
  "abstract" : [
    {
      "text" : "Wait asynchronously until the done closure is called or the timeout has been reached.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "waitUntil"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "timeout"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble0A12TimeIntervalO",
      "text" : "NimbleTimeInterval"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "action"
    },
    {
      "kind" : "text",
      "text" : ": (() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/waitUntil(timeout:fileID:file:line:column:action:)-8j9ew",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "waitUntil(timeout:fileID:file:line:column:action:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/waituntil(timeout:fileid:file:line:column:action:)-8j9ew"
},
"doc://Nimble/documentation/Nimble/withAssertionHandler(_:fileID:file:line:column:closure:)-5m4st": {
  "abstract" : [
    {
      "text" : "Allows you to temporarily replace the current Nimble assertion handler with",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the one provided for the scope of the closure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withAssertionHandler"
    },
    {
      "kind" : "text",
      "text" : "(any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AssertionHandlerP",
      "text" : "AssertionHandler"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "closure"
    },
    {
      "kind" : "text",
      "text" : ": () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/withAssertionHandler(_:fileID:file:line:column:closure:)-5m4st",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withAssertionHandler(_:fileID:file:line:column:closure:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/withassertionhandler(_:fileid:file:line:column:closure:)-5m4st"
},
"doc://Nimble/documentation/Nimble/withAssertionHandler(_:fileID:file:line:column:closure:)-80yqc": {
  "abstract" : [
    {
      "text" : "Allows you to temporarily replace the current Nimble assertion handler with",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the one provided for the scope of the closure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withAssertionHandler"
    },
    {
      "kind" : "text",
      "text" : "(any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble16AssertionHandlerP",
      "text" : "AssertionHandler"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "fileID"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:6Nimble10FileStringa",
      "text" : "FileString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "column"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "closure"
    },
    {
      "kind" : "text",
      "text" : ": () "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    }
  ],
  "identifier" : "doc:\/\/Nimble\/documentation\/Nimble\/withAssertionHandler(_:fileID:file:line:column:closure:)-80yqc",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withAssertionHandler(_:fileID:file:line:column:closure:)",
  "type" : "topic",
  "url" : "\/documentation\/nimble\/withassertionhandler(_:fileid:file:line:column:closure:)-80yqc"
}
}
}