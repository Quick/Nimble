{"Typealiases.html#/s:6Nimble14PredicateBlocka":{"name":"PredicateBlock","abstract":"<p>Undocumented</p>"},"Typealiases.html#/FileString":{"name":"FileString"},"Typealiases.html#/s:6Nimble10FileStringa":{"name":"FileString","abstract":"<p>Undocumented</p>"},"Structs/AsyncDefaults.html#/s:6Nimble13AsyncDefaultsV7timeout8Dispatch0E12TimeIntervalOvpZ":{"name":"timeout","abstract":"<p>Undocumented</p>","parent_name":"AsyncDefaults"},"Structs/AsyncDefaults.html#/s:6Nimble13AsyncDefaultsV12pollInterval8Dispatch0f4TimeE0OvpZ":{"name":"pollInterval","abstract":"<p>Undocumented</p>","parent_name":"AsyncDefaults"},"Structs/PredicateResult.html#/s:6Nimble15PredicateResultV6statusAA0B6StatusOvp":{"name":"status","abstract":"<p>Status indicates if the predicate matches, does not match, or fails.</p>","parent_name":"PredicateResult"},"Structs/PredicateResult.html#/s:6Nimble15PredicateResultV7messageAA18ExpectationMessageOvp":{"name":"message","abstract":"<p>The error message that can be displayed if it does not match</p>","parent_name":"PredicateResult"},"Structs/PredicateResult.html#/s:6Nimble15PredicateResultV6status7messageAcA0B6StatusO_AA18ExpectationMessageOtcfc":{"name":"init(status:message:)","abstract":"<p>Constructs a new PredicateResult with a given status and error message</p>","parent_name":"PredicateResult"},"Structs/PredicateResult.html#/s:6Nimble15PredicateResultV4bool7messageACSb_AA18ExpectationMessageOtcfc":{"name":"init(bool:message:)","abstract":"<p>Shorthand to PredicateResult(status: PredicateStatus(bool: bool), message: message)</p>","parent_name":"PredicateResult"},"Structs/PredicateResult.html#/s:6Nimble15PredicateResultV9toBoolean11expectationSbAA16ExpectationStyleO_tF":{"name":"toBoolean(expectation:)","abstract":"<p>Converts the result to a boolean based on what the expectation intended</p>","parent_name":"PredicateResult"},"Structs/PredicateResult.html#/s:6Nimble15PredicateResultV12toObjectiveCAA012NMBPredicateC0CyF":{"name":"toObjectiveC()","abstract":"<p>Undocumented</p>","parent_name":"PredicateResult"},"Structs/Predicate.html#/s:6Nimble9PredicateVyACyxGAA0B6ResultVAA10ExpressionVyxGKccfc":{"name":"init(_:)","abstract":"<p>Constructs a predicate that knows how take a given value</p>","parent_name":"Predicate"},"Structs/Predicate.html#/s:6Nimble9PredicateV9satisfiesyAA0B6ResultVAA10ExpressionVyxGKF":{"name":"satisfies(_:)","abstract":"<p>Uses a predicate on a given value to see if it passes the predicate.</p>","parent_name":"Predicate"},"Structs/Predicate.html#/s:6Nimble9PredicateV6define7matcherACyxGAA0B6ResultVAA10ExpressionVyxGKc_tFZ":{"name":"define(matcher:)","abstract":"<p>Like Predicate() constructor, but automatically guard against nil (actual) values</p>","parent_name":"Predicate"},"Structs/Predicate.html#/s:6Nimble9PredicateV6define_7matcherACyxGSS_AA0B6ResultVAA10ExpressionVyxG_AA18ExpectationMessageOtKctFZ":{"name":"define(_:matcher:)","abstract":"<p>Defines a predicate with a default message that can be returned in the closure","parent_name":"Predicate"},"Structs/Predicate.html#/s:6Nimble9PredicateV13defineNilable_7matcherACyxGSS_AA0B6ResultVAA10ExpressionVyxG_AA18ExpectationMessageOtKctFZ":{"name":"defineNilable(_:matcher:)","abstract":"<p>Defines a predicate with a default message that can be returned in the closure","parent_name":"Predicate"},"Structs/Predicate.html#/s:6Nimble9PredicateV6simple_7matcherACyxGSS_AA0B6StatusOAA10ExpressionVyxGKctFZ":{"name":"simple(_:matcher:)","abstract":"<p>Provides a simple predicate definition that provides no control over the predefined","parent_name":"Predicate"},"Structs/Predicate.html#/s:6Nimble9PredicateV13simpleNilable_7matcherACyxGSS_AA0B6StatusOAA10ExpressionVyxGKctFZ":{"name":"simpleNilable(_:matcher:)","abstract":"<p>Provides a simple predicate definition that provides no control over the predefined","parent_name":"Predicate"},"Structs/Predicate.html#/s:6Nimble9PredicateV13requireNonNilACyxGvp":{"name":"requireNonNil","abstract":"<p>Returns a new Predicate based on the current one that always fails if nil is given as","parent_name":"Predicate"},"Structs/ExpectationNil.html#/s:s23ExpressibleByNilLiteralP03nilD0xyt_tcfc":{"name":"init(nilLiteral:)","parent_name":"ExpectationNil"},"Structs/Expression.html#/s:6Nimble10ExpressionV8locationAA14SourceLocationCvp":{"name":"location","abstract":"<p>Undocumented</p>","parent_name":"Expression"},"Structs/Expression.html#/s:6Nimble10ExpressionV9isClosureSbvp":{"name":"isClosure","abstract":"<p>Undocumented</p>","parent_name":"Expression"},"Structs/Expression.html#/s:6Nimble10ExpressionV10expression8location9isClosureACyxGxSgyKc_AA14SourceLocationCSbtcfc":{"name":"init(expression:location:isClosure:)","abstract":"<p>Creates a new expression struct. Normally, expect(&hellip;) will manage this","parent_name":"Expression"},"Structs/Expression.html#/s:6Nimble10ExpressionV08memoizedB08location14withoutCaching9isClosureACyxGxSgSbKc_AA14SourceLocationCS2btcfc":{"name":"init(memoizedExpression:location:withoutCaching:isClosure:)","abstract":"<p>Creates a new expression struct. Normally, expect(&hellip;) will manage this","parent_name":"Expression"},"Structs/Expression.html#/s:6Nimble10ExpressionV4castyACyqd__Gqd__SgxSgKclF":{"name":"cast(_:)","abstract":"<p>Returns a new Expression from the given expression. Identical to a map()","parent_name":"Expression"},"Structs/Expression.html#/s:6Nimble10ExpressionV8evaluatexSgyKF":{"name":"evaluate()","abstract":"<p>Undocumented</p>","parent_name":"Expression"},"Structs/Expression.html#/s:6Nimble10ExpressionV14withoutCachingACyxGyF":{"name":"withoutCaching()","abstract":"<p>Undocumented</p>","parent_name":"Expression"},"Structs/AsyncExpectation.html#/s:6Nimble16AsyncExpectationV10expressionAA10ExpressionVyxGvp":{"name":"expression","abstract":"<p>Undocumented</p>","parent_name":"AsyncExpectation"},"Structs/AsyncExpectation.html#/s:6Nimble16AsyncExpectationV6statusAA0C6StatusOvp":{"name":"status","abstract":"<p>The status of the test after predicates have been evaluated.</p>","parent_name":"AsyncExpectation"},"Structs/AsyncExpectation.html#/s:6Nimble16AsyncExpectationV10expressionACyxGAA10ExpressionVyxG_tcfc":{"name":"init(expression:)","abstract":"<p>Undocumented</p>","parent_name":"AsyncExpectation"},"Structs/AsyncExpectation.html#/s:6Nimble16AsyncExpectationV6verifyyACyxGSb_AA14FailureMessageCtF":{"name":"verify(_:_:)","abstract":"<p>Takes the result of a test and passes it to the assertion handler.</p>","parent_name":"AsyncExpectation"},"Structs/AsyncExpectation.html#/s:6Nimble16AsyncExpectationV2eeoiyyACyxG_AA0C3NilVtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"AsyncExpectation"},"Structs/AsyncExpectation.html#/s:6Nimble16AsyncExpectationV2neoiyyACyxG_AA0C3NilVtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"AsyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV10expressionAA10ExpressionVyxGvp":{"name":"expression","abstract":"<p>Undocumented</p>","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV6statusAA0C6StatusOvp":{"name":"status","abstract":"<p>The status of the test after predicates have been evaluated.</p>","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV10expressionACyxGAA10ExpressionVyxG_tcfc":{"name":"init(expression:)","abstract":"<p>Undocumented</p>","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV6verifyyACyxGSb_AA14FailureMessageCtF":{"name":"verify(_:_:)","abstract":"<p>Takes the result of a test and passes it to the assertion handler.</p>","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV2eeoiyyACyxG_AA0C3NilVtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV2neoiyyACyxG_AA0C3NilVtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV12toEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_8Dispatch0k4TimeH0OANSSSgtYaF":{"name":"toEventually(_:timeout:pollInterval:description:)","abstract":"<p>Tests the actual value using a matcher to match by checking continuously","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV15toEventuallyNot_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_8Dispatch0l4TimeI0OANSSSgtYaF":{"name":"toEventuallyNot(_:timeout:pollInterval:description:)","abstract":"<p>Tests the actual value using a matcher to not match by checking","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV15toNotEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_8Dispatch0l4TimeI0OANSSSgtYaF":{"name":"toNotEventually(_:timeout:pollInterval:description:)","abstract":"<p>Tests the actual value using a matcher to not match by checking","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV7toNever_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_8Dispatch0k4TimeH0OANSSSgtYaF":{"name":"toNever(_:until:pollInterval:description:)","abstract":"<p>Tests the actual value using a matcher to never match by checking","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV7neverTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_8Dispatch0k4TimeH0OANSSSgtYaF":{"name":"neverTo(_:until:pollInterval:description:)","abstract":"<p>Tests the actual value using a matcher to never match by checking","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV8toAlways_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_8Dispatch0k4TimeH0OANSSSgtYaF":{"name":"toAlways(_:until:pollInterval:description:)","abstract":"<p>Tests the actual value using a matcher to always match by checking","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV8alwaysTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_8Dispatch0k4TimeH0OANSSSgtYaF":{"name":"alwaysTo(_:until:pollInterval:description:)","abstract":"<p>Tests the actual value using a matcher to always match by checking","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV12toEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_8Dispatch0k4TimeH0OANSSSgtF":{"name":"toEventually(_:timeout:pollInterval:description:)","abstract":"<p>Tests the actual value using a matcher to match by checking continuously","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV15toEventuallyNot_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_8Dispatch0l4TimeI0OANSSSgtF":{"name":"toEventuallyNot(_:timeout:pollInterval:description:)","abstract":"<p>Tests the actual value using a matcher to not match by checking","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV15toNotEventually_7timeout12pollInterval11descriptionACyxGAA9PredicateVyxG_8Dispatch0l4TimeI0OANSSSgtF":{"name":"toNotEventually(_:timeout:pollInterval:description:)","abstract":"<p>Tests the actual value using a matcher to not match by checking","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV7toNever_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_8Dispatch0k4TimeH0OANSSSgtF":{"name":"toNever(_:until:pollInterval:description:)","abstract":"<p>Tests the actual value using a matcher to never match by checking","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV7neverTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_8Dispatch0k4TimeH0OANSSSgtF":{"name":"neverTo(_:until:pollInterval:description:)","abstract":"<p>Tests the actual value using a matcher to never match by checking","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV8toAlways_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_8Dispatch0k4TimeH0OANSSSgtF":{"name":"toAlways(_:until:pollInterval:description:)","abstract":"<p>Tests the actual value using a matcher to always match by checking","parent_name":"SyncExpectation"},"Structs/SyncExpectation.html#/s:6Nimble15SyncExpectationV8alwaysTo_5until12pollInterval11descriptionACyxGAA9PredicateVyxG_8Dispatch0k4TimeH0OANSSSgtF":{"name":"alwaysTo(_:until:pollInterval:description:)","abstract":"<p>Tests the actual value using a matcher to always match by checking","parent_name":"SyncExpectation"},"Structs/AssertionRecord.html#/s:6Nimble15AssertionRecordV7successSbvp":{"name":"success","abstract":"<p>Whether the assertion succeeded or failed</p>","parent_name":"AssertionRecord"},"Structs/AssertionRecord.html#/s:6Nimble15AssertionRecordV7messageAA14FailureMessageCvp":{"name":"message","abstract":"<p>The failure message the assertion would display on failure.</p>","parent_name":"AssertionRecord"},"Structs/AssertionRecord.html#/s:6Nimble15AssertionRecordV8locationAA14SourceLocationCvp":{"name":"location","abstract":"<p>The source location the expectation occurred on.</p>","parent_name":"AssertionRecord"},"Structs/AssertionRecord.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"AssertionRecord"},"Structs/execTypesCountTuple.html#/s:6Nimble19execTypesCountTupleV5valuex_xxxxxxxxxxxxxtvp":{"name":"value","abstract":"<p>Undocumented</p>","parent_name":"execTypesCountTuple"},"Structs/execTypesCountTuple.html#/s:6Nimble19execTypesCountTupleVACyxGycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"execTypesCountTuple"},"Structs/execTypesCountTuple.html":{"name":"execTypesCountTuple","abstract":"<p>Undocumented</p>"},"Structs/AssertionRecord.html":{"name":"AssertionRecord","abstract":"<p>A data structure that stores information about an assertion when"},"Structs/SyncExpectation.html":{"name":"SyncExpectation","abstract":"<p>Undocumented</p>"},"Structs/AsyncExpectation.html":{"name":"AsyncExpectation","abstract":"<p>Undocumented</p>"},"Structs/Expression.html":{"name":"Expression","abstract":"<p>Expression represents the closure of the value inside expect(&hellip;)."},"Structs/ExpectationNil.html":{"name":"ExpectationNil","abstract":"<p>Represents <code>nil</code> value to be used with the operator overloads for <code>beNil</code>.</p>"},"Structs/Predicate.html":{"name":"Predicate","abstract":"<p>A Predicate is part of the new matcher API that provides assertions to expectations.</p>"},"Structs/PredicateResult.html":{"name":"PredicateResult","abstract":"<p>The value that a Predicates return to describe if the given (actual) value matches the"},"Structs/AsyncDefaults.html":{"name":"AsyncDefaults","abstract":"<p>If you are running on a slower machine, it could be useful to increase the default timeout value"},"Protocols/TestOutputStringConvertible.html#/s:6Nimble27TestOutputStringConvertibleP15testDescriptionSSvp":{"name":"testDescription","abstract":"<p>Undocumented</p>","parent_name":"TestOutputStringConvertible"},"Protocols/NMBComparable.html#/c:@M@Nimble@objc(pl)NMBComparable(im)NMB_compare:":{"name":"NMB_compare(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBComparable"},"Protocols/NMBDoubleConvertible.html#/s:6Nimble20NMBDoubleConvertibleP11doubleValueSdvp":{"name":"doubleValue","abstract":"<p>Undocumented</p>","parent_name":"NMBDoubleConvertible"},"Protocols/NMBOrderedCollection.html#/s:6Nimble20NMBOrderedCollectionP6object2atypSi_tF":{"name":"object(at:)","abstract":"<p>Undocumented</p>","parent_name":"NMBOrderedCollection"},"Protocols/NMBCollection.html#/s:6Nimble13NMBCollectionP5countSivp":{"name":"count","abstract":"<p>Undocumented</p>","parent_name":"NMBCollection"},"Protocols/NMBContainer.html#/s:6Nimble12NMBContainerP8containsySbypF":{"name":"contains(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBContainer"},"Protocols/Expectation.html#/s:6Nimble11ExpectationP5ValueQa":{"name":"Value","abstract":"<p>Undocumented</p>","parent_name":"Expectation"},"Protocols/Expectation.html#/s:6Nimble11ExpectationP10expressionAA10ExpressionVy5ValueQzGvp":{"name":"expression","abstract":"<p>Undocumented</p>","parent_name":"Expectation"},"Protocols/Expectation.html#/s:6Nimble11ExpectationP6statusAA0B6StatusOvp":{"name":"status","abstract":"<p>The status of the test after predicates have been evaluated.</p>","parent_name":"Expectation"},"Protocols/Expectation.html#/s:6Nimble11ExpectationP6verifyyxSb_AA14FailureMessageCtF":{"name":"verify(_:_:)","abstract":"<p>Takes the result of a test and passes it to the assertion handler.</p>","parent_name":"Expectation"},"Protocols/Expectation.html#/s:6Nimble11ExpectationPAAE2to_11descriptionxAA9PredicateVy5ValueQzG_SSSgtF":{"name":"to(_:description:)","abstract":"<p>Tests the actual value using a matcher to match.</p>","parent_name":"Expectation"},"Protocols/Expectation.html#/s:6Nimble11ExpectationPAAE5toNot_11descriptionxAA9PredicateVy5ValueQzG_SSSgtF":{"name":"toNot(_:description:)","abstract":"<p>Tests the actual value using a matcher to not match.</p>","parent_name":"Expectation"},"Protocols/Expectation.html#/s:6Nimble11ExpectationPAAE5notTo_11descriptionxAA9PredicateVy5ValueQzG_SSSgtF":{"name":"notTo(_:description:)","abstract":"<p>Tests the actual value using a matcher to not match.</p>","parent_name":"Expectation"},"Protocols/Expectation.html#/s:6Nimble11ExpectationPAAE9onFailure5throwys5Error_p_tKF":{"name":"onFailure(throw:)","abstract":"<p>Throws the supplied error if the expectation has previously failed.</p>","parent_name":"Expectation"},"Protocols/AssertionHandler.html#/s:6Nimble16AssertionHandlerP6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF":{"name":"assert(_:message:location:)","abstract":"<p>Undocumented</p>","parent_name":"AssertionHandler"},"Protocols/AssertionHandler.html":{"name":"AssertionHandler","abstract":"<p>Protocol for the assertion handler that Nimble uses for all expectations.</p>"},"Protocols/Expectation.html":{"name":"Expectation","abstract":"<p>Undocumented</p>"},"Protocols/NMBContainer.html":{"name":"NMBContainer","abstract":"<p>Protocol for types that support contain() matcher.</p>"},"Protocols/NMBCollection.html":{"name":"NMBCollection","abstract":"<p>Protocol for types that support only beEmpty(), haveCount() matchers</p>"},"Protocols/NMBOrderedCollection.html":{"name":"NMBOrderedCollection","abstract":"<p>Protocol for types that support beginWith(), endWith(), beEmpty() matchers</p>"},"Protocols/NMBDoubleConvertible.html":{"name":"NMBDoubleConvertible","abstract":"<p>Undocumented</p>"},"Protocols/NMBComparable.html":{"name":"NMBComparable","abstract":"<p>Protocol for types to support beLessThan(), beLessThanOrEqualTo(),"},"Protocols/TestOutputStringConvertible.html":{"name":"TestOutputStringConvertible","abstract":"<p>A type with a customized test output text representation.</p>"},"Functions.html#/s:6Nimble19catchBadInstruction2inAA0cD9ExceptionCSgyyc_tF":{"name":"catchBadInstruction(in:)","abstract":"<p>Run the provided block. If a mach &ldquo;BAD_INSTRUCTION&rdquo; exception is raised, catch it and return a BadInstructionException (which captures stack information about the throw site, if desired). Otherwise return nil."},"Functions.html#/s:6Nimble21MACH_MSGH_BITS_REMOTEys6UInt32VADF":{"name":"MACH_MSGH_BITS_REMOTE(_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble14MACH_MSGH_BITSys6UInt32VAD_ADtF":{"name":"MACH_MSGH_BITS(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble20withAssertionHandler_4file4line7closureyAA0cD0_p_SSSuyyYaKXEtYaF":{"name":"withAssertionHandler(_:file:line:closure:)","abstract":"<p>Allows you to temporarily replace the current Nimble assertion handler with"},"Functions.html#/s:6Nimble18gatherExpectations8silently7closureSayAA15AssertionRecordVGSb_yyYaXEtYaF":{"name":"gatherExpectations(silently:closure:)","abstract":"<p>Captures expectations that occur in the given closure. Note that all"},"Functions.html#/s:6Nimble25gatherFailingExpectations8silently7closureSayAA15AssertionRecordVGSb_yyYaXEtYaF":{"name":"gatherFailingExpectations(silently:closure:)","abstract":"<p>Captures failed expectations that occur in the given closure. Note that all"},"Functions.html#/s:6Nimble20withAssertionHandler_4file4line7closureyAA0cD0_p_SSSuyyKXEtF":{"name":"withAssertionHandler(_:file:line:closure:)","abstract":"<p>Allows you to temporarily replace the current Nimble assertion handler with"},"Functions.html#/s:6Nimble18gatherExpectations8silently7closureSayAA15AssertionRecordVGSb_yyXEtF":{"name":"gatherExpectations(silently:closure:)","abstract":"<p>Captures expectations that occur in the given closure. Note that all"},"Functions.html#/s:6Nimble25gatherFailingExpectations8silently7closureSayAA15AssertionRecordVGSb_yyXEtF":{"name":"gatherFailingExpectations(silently:closure:)","abstract":"<p>Captures failed expectations that occur in the given closure. Note that all"},"Functions.html#/s:6Nimble13recordFailure_8locationySS_AA14SourceLocationCtF":{"name":"recordFailure(_:location:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble6expect4file4line_AA16AsyncExpectationVyxGSS_SuxSgyYaKctYalF":{"name":"expect(file:line:_:)","abstract":"<p>Make an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AsyncExpectation.html\">AsyncExpectation</a></code> on a given actual value. The value given is lazily evaluated.</p>"},"Functions.html#/s:6Nimble6expect4file4line_AA16AsyncExpectationVyxGSS_SuxyYaKcyXEtYalF":{"name":"expect(file:line:_:)","abstract":"<p>Make an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AsyncExpectation.html\">AsyncExpectation</a></code> on a given actual value. The closure is lazily invoked.</p>"},"Functions.html#/s:6Nimble6expect4file4line_AA16AsyncExpectationVyxGSS_SuxSgyYaKcyXEtYalF":{"name":"expect(file:line:_:)","abstract":"<p>Make an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AsyncExpectation.html\">AsyncExpectation</a></code> on a given actual value. The closure is lazily invoked.</p>"},"Functions.html#/s:6Nimble6expect4file4line_AA16AsyncExpectationVyytGSS_SuyyYaKcyXEtYaF":{"name":"expect(file:line:_:)","abstract":"<p>Make an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/AsyncExpectation.html\">AsyncExpectation</a></code> on a given actual value. The closure is lazily invoked.</p>"},"Functions.html#/s:6Nimble9waitUntil7timeout4file4line6actiony8Dispatch0H12TimeIntervalO_SSSuyyycYactYaF":{"name":"waitUntil(timeout:file:line:action:)","abstract":"<p>Wait asynchronously until the done closure is called or the timeout has been reached.</p>"},"Functions.html#/s:6Nimble9waitUntil7timeout4file4line6actiony8Dispatch0H12TimeIntervalO_SSSuyyycctYaF":{"name":"waitUntil(timeout:file:line:action:)","abstract":"<p>Wait asynchronously until the done closure is called or the timeout has been reached.</p>"},"Functions.html#/s:6Nimble9waitUntil7timeout4file4line6actiony8Dispatch0H12TimeIntervalO_SSSuyyycctF":{"name":"waitUntil(timeout:file:line:action:)","abstract":"<p>Wait asynchronously until the done closure is called or the timeout has been reached.</p>"},"Functions.html#/s:6Nimble6expect4file4line_AA15SyncExpectationVyxGSS_SuxSgyKXAtlF":{"name":"expect(file:line:_:)","abstract":"<p>Make an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Expectation.html\">Expectation</a></code> on a given actual value. The value given is lazily evaluated.</p>"},"Functions.html#/s:6Nimble6expect4file4line_AA15SyncExpectationVyxGSS_SuxyKcyXKtlF":{"name":"expect(file:line:_:)","abstract":"<p>Make an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Expectation.html\">Expectation</a></code> on a given actual value. The closure is lazily invoked.</p>"},"Functions.html#/s:6Nimble6expect4file4line_AA15SyncExpectationVyxGSS_SuxSgyKcyXKtlF":{"name":"expect(file:line:_:)","abstract":"<p>Make an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Expectation.html\">Expectation</a></code> on a given actual value. The closure is lazily invoked.</p>"},"Functions.html#/s:6Nimble6expect4file4line_AA15SyncExpectationVyytGSS_SuyyKcyXKtF":{"name":"expect(file:line:_:)","abstract":"<p>Make an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Expectation.html\">Expectation</a></code> on a given actual value. The closure is lazily invoked.</p>"},"Functions.html#/s:6Nimble4fail_8locationySS_AA14SourceLocationCtF":{"name":"fail(_:location:)","abstract":"<p>Always fails the test with a message and a specified location.</p>"},"Functions.html#/s:6Nimble4fail_4file4lineySS_SSSutF":{"name":"fail(_:file:line:)","abstract":"<p>Always fails the test with a message.</p>"},"Functions.html#/s:6Nimble4fail_4lineySS_SutF":{"name":"fail(_:line:)","abstract":"<p>Always fails the test.</p>"},"Functions.html#/s:6Nimble7allPassyAA9PredicateVyxGSb7ElementQzKcSTRzlF":{"name":"allPass(_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble7allPassyAA9PredicateVyxGSS_Sb7ElementQzKctSTRzlF":{"name":"allPass(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble7allPassyAA9PredicateVyxGADy7ElementQzGSTRzlF":{"name":"allPass(_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble9beAKindOfyAA9PredicateVyypGxmlF":{"name":"beAKindOf(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is an instance of the given class.</p>"},"Functions.html#/s:6Nimble9beAKindOfyAA9PredicateVySo8NSObjectCGyXlXpF":{"name":"beAKindOf(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is an instance of the given class."},"Functions.html#/s:6Nimble14beAnInstanceOfyAA9PredicateVyypGxmlF":{"name":"beAnInstanceOf(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is an <em>exact</em> instance of the given class.</p>"},"Functions.html#/s:6Nimble14beAnInstanceOfyAA9PredicateVySo8NSObjectCGyXlXpF":{"name":"beAnInstanceOf(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is an instance of the given class."},"Functions.html#/s:6Nimble12defaultDeltaxySFRzlF":{"name":"defaultDelta()","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble9beCloseTo_6withinAA9PredicateVyxGx_xtSFRzlF":{"name":"beCloseTo(_:within:)","abstract":"<p>A Nimble matcher that succeeds when a value is close to another. This is used for floating"},"Functions.html#/s:6Nimble9beCloseTo_6withinAA9PredicateVyxGx_SdtAA20NMBDoubleConvertibleRzlF":{"name":"beCloseTo(_:within:)","abstract":"<p>A Nimble matcher that succeeds when a value is close to another. This is used for floating"},"Functions.html#/s:6Nimble9beCloseTo_6withinAA9PredicateVyq_Gq__xtSFRz7ElementQy_RszSlR_r0_lF":{"name":"beCloseTo(_:within:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble003dchoiyyx_q_tAA11ExpectationRzSlR_5ValueQzRs_SF7ElementRp_r0_lF":{"name":"≈(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble003dchoiyyx_q_tAA11ExpectationRzSFR_5ValueQzRs_r0_lF":{"name":"≈(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble003dchoiyyx_q_8expected_q_5deltattAA11ExpectationRzSFR_5ValueQzRs_r0_lF":{"name":"≈(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyx_q_8expected_q_5deltattAA11ExpectationRzSFR_5ValueQzRs_r0_lF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble003dchoiyyx_q_tAA11ExpectationRzAA20NMBDoubleConvertibleR_5ValueQzRs_r0_lF":{"name":"≈(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble003dchoiyyx_q_8expected_Sd5deltattAA11ExpectationRzAA20NMBDoubleConvertibleR_5ValueQzRs_r0_lF":{"name":"≈(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyx_q_8expected_Sd5deltattAA11ExpectationRzAA20NMBDoubleConvertibleR_5ValueQzRs_r0_lF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble003obaoiyx8expected_x5deltatx_xtSFRzlF":{"name":"±(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble003obaoiyx8expected_Sd5deltatx_SdtAA20NMBDoubleConvertibleRzlF":{"name":"±(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble7beEmptyAA9PredicateVyxGySTRzlF":{"name":"beEmpty()","abstract":"<p>A Nimble matcher that succeeds when a value is &ldquo;empty&rdquo;. For collections, this"},"Functions.html#/s:6Nimble7beEmptyAA9PredicateVyxGys10SetAlgebraRzlF":{"name":"beEmpty()","abstract":"<p>A Nimble matcher that succeeds when a value is &ldquo;empty&rdquo;. For collections, this"},"Functions.html#/s:6Nimble7beEmptyAA9PredicateVyxGySTRzs10SetAlgebraRzlF":{"name":"beEmpty()","abstract":"<p>A Nimble matcher that succeeds when a value is &ldquo;empty&rdquo;. For collections, this"},"Functions.html#/s:6Nimble7beEmptyAA9PredicateVySSGyF":{"name":"beEmpty()","abstract":"<p>A Nimble matcher that succeeds when a value is &ldquo;empty&rdquo;. For collections, this"},"Functions.html#/s:6Nimble7beEmptyAA9PredicateVySo8NSStringCGyF":{"name":"beEmpty()","abstract":"<p>A Nimble matcher that succeeds when a value is &ldquo;empty&rdquo;. For collections, this"},"Functions.html#/s:6Nimble7beEmptyAA9PredicateVySo12NSDictionaryCGyF":{"name":"beEmpty()","abstract":"<p>A Nimble matcher that succeeds when a value is &ldquo;empty&rdquo;. For collections, this"},"Functions.html#/s:6Nimble7beEmptyAA9PredicateVySo7NSArrayCGyF":{"name":"beEmpty()","abstract":"<p>A Nimble matcher that succeeds when a value is &ldquo;empty&rdquo;. For collections, this"},"Functions.html#/s:6Nimble7beEmptyAA9PredicateVyAA13NMBCollection_pGyF":{"name":"beEmpty()","abstract":"<p>A Nimble matcher that succeeds when a value is &ldquo;empty&rdquo;. For collections, this"},"Functions.html#/s:6Nimble13beGreaterThanyAA9PredicateVyxGxSgSLRzlF":{"name":"beGreaterThan(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is greater than the expected value.</p>"},"Functions.html#/s:6Nimble1goiyyx_q_tAA11ExpectationRzSLR_5ValueQzRs_r0_lF":{"name":">(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble13beGreaterThanyAA9PredicateVyxGxSgAA13NMBComparableRzlF":{"name":"beGreaterThan(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is greater than the expected value.</p>"},"Functions.html#/s:6Nimble1goiyyx_q_SgtAA11ExpectationRzAA13NMBComparableR_5ValueQzRs_r0_lF":{"name":">(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble22beGreaterThanOrEqualToyAA9PredicateVyxGxSgSLRzlF":{"name":"beGreaterThanOrEqualTo(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is greater than"},"Functions.html#/s:6Nimble2geoiyyx_q_tAA11ExpectationRzSLR_5ValueQzRs_r0_lF":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble22beGreaterThanOrEqualToyAA9PredicateVyxGxSgAA13NMBComparableRzlF":{"name":"beGreaterThanOrEqualTo(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is greater than"},"Functions.html#/s:6Nimble2geoiyyx_q_tAA11ExpectationRzAA13NMBComparableR_5ValueQzRs_r0_lF":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble13beIdenticalToyAA9PredicateVyyXlGyXlSgF":{"name":"beIdenticalTo(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is the same instance"},"Functions.html#/s:6Nimble3eeeoiyyx_yXlSgtAA11ExpectationRzyXl5ValueRtzlF":{"name":"===(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble3neeoiyyx_yXlSgtAA11ExpectationRzyXl5ValueRtzlF":{"name":"!==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2beyAA9PredicateVyyXlGyXlSgF":{"name":"be(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is the same instance"},"Functions.html#/s:6Nimble10beLessThanyAA9PredicateVyxGxSgSLRzlF":{"name":"beLessThan(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is less than the expected value.</p>"},"Functions.html#/s:6Nimble1loiyyx_q_tAA11ExpectationRzSLR_5ValueQzRs_r0_lF":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble10beLessThanyAA9PredicateVyxGxSgAA13NMBComparableRzlF":{"name":"beLessThan(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is less than the expected value.</p>"},"Functions.html#/s:6Nimble1loiyyx_q_SgtAA11ExpectationRzAA13NMBComparableR_5ValueQzRs_r0_lF":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble19beLessThanOrEqualToyAA9PredicateVyxGxSgSLRzlF":{"name":"beLessThanOrEqualTo(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is less than"},"Functions.html#/s:6Nimble2leoiyyx_q_tAA11ExpectationRzSLR_5ValueQzRs_r0_lF":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble19beLessThanOrEqualToyAA9PredicateVyxGxSgAA13NMBComparableRzlF":{"name":"beLessThanOrEqualTo(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is less than"},"Functions.html#/s:6Nimble2leoiyyx_q_tAA11ExpectationRzAA13NMBComparableR_5ValueQzRs_r0_lF":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble6beTrueAA9PredicateVySbGyF":{"name":"beTrue()","abstract":"<p>A Nimble matcher that succeeds when the actual value is exactly true."},"Functions.html#/s:6Nimble7beFalseAA9PredicateVySbGyF":{"name":"beFalse()","abstract":"<p>A Nimble matcher that succeeds when the actual value is exactly false."},"Functions.html#/s:6Nimble8beTruthyAA9PredicateVyxGySQRzs27ExpressibleByBooleanLiteralRzlF":{"name":"beTruthy()","abstract":"<p>A Nimble matcher that succeeds when the actual value is not logically false.</p>"},"Functions.html#/s:6Nimble7beFalsyAA9PredicateVyxGySQRzs27ExpressibleByBooleanLiteralRzlF":{"name":"beFalsy()","abstract":"<p>A Nimble matcher that succeeds when the actual value is logically false."},"Functions.html#/s:6Nimble5beNilAA9PredicateVyxGylF":{"name":"beNil()","abstract":"<p>A Nimble matcher that succeeds when the actual value is nil.</p>"},"Functions.html#/s:6Nimble9beSuccess4testAA9PredicateVys6ResultOyxq_GGyxcSg_ts5ErrorR_r0_lF":{"name":"beSuccess(test:)","abstract":"<p>A Nimble matcher for Result that succeeds when the actual value is success.</p>"},"Functions.html#/s:6Nimble9beFailure4testAA9PredicateVys6ResultOyxq_GGyq_cSg_ts5ErrorR_r0_lF":{"name":"beFailure(test:)","abstract":"<p>A Nimble matcher for Result that succeeds when the actual value is failure.</p>"},"Functions.html#/s:6Nimble6beVoidAA9PredicateVyytGyF":{"name":"beVoid()","abstract":"<p>A Nimble matcher that succeeds when the actual value is Void.</p>"},"Functions.html#/s:6Nimble2eeoiyyx_yttAA11ExpectationRzyt5ValueRtzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyx_yttAA11ExpectationRzyt5ValueRtzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble8beWithinyAA9PredicateVyxGSnyxGSLRzlF":{"name":"beWithin(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is within given range.</p>"},"Functions.html#/s:6Nimble8beWithinyAA9PredicateVyxGSNyxGSLRzlF":{"name":"beWithin(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is within given range.</p>"},"Functions.html#/s:6Nimble9beginWithyAA9PredicateVyxG7ElementQzSTRzSQAGRQlF":{"name":"beginWith(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual sequence&rsquo;s first element"},"Functions.html#/s:6Nimble9beginWithyAA9PredicateVyAA20NMBOrderedCollection_pGypF":{"name":"beginWith(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual collection&rsquo;s first element"},"Functions.html#/s:6Nimble9beginWithyAA9PredicateVySSGSSF":{"name":"beginWith(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual string contains expected substring"},"Functions.html#/s:6Nimble9beginWith6prefixAA9PredicateVyxGq_Sg_tSTRzSTR_SQ7ElementRpzAHQy_AIRSr0_lF":{"name":"beginWith(prefix:)","abstract":"<p>A Nimble matcher that succeeds when the exepected sequence is a prefix of the actual sequence.</p>"},"Functions.html#/s:6Nimble9beginWith6prefix2byAA9PredicateVyxGq_Sg_Sb7ElementQz_AIQy_tctSTRzSTR_r0_lF":{"name":"beginWith(prefix:by:)","abstract":"<p>A Nimble matcher that succeeds when the expected sequence is the prefix of the actual sequence, using the given predicate as the equivalence test.</p>"},"Functions.html#/s:6Nimble7containyAA9PredicateVyxG7ElementQzd_tSTRzSQAGRQlF":{"name":"contain(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual sequence contains the expected values.</p>"},"Functions.html#/s:6Nimble7containyAA9PredicateVyxGSay7ElementQzGSTRzSQAGRQlF":{"name":"contain(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual sequence contains the expected values.</p>"},"Functions.html#/s:6Nimble7containyAA9PredicateVyxG7ElementQzd_ts10SetAlgebraRzSQAGRQlF":{"name":"contain(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual set contains the expected values.</p>"},"Functions.html#/s:6Nimble7containyAA9PredicateVyxGSay7ElementQzGs10SetAlgebraRzSQAGRQlF":{"name":"contain(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual set contains the expected values.</p>"},"Functions.html#/s:6Nimble7containyAA9PredicateVyxG7ElementSTQzd_tSTRzs10SetAlgebraRzSQAGRQlF":{"name":"contain(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual set contains the expected values.</p>"},"Functions.html#/s:6Nimble7containyAA9PredicateVyxGSay7ElementSTQzGSTRzs10SetAlgebraRzSQAGRQlF":{"name":"contain(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual set contains the expected values.</p>"},"Functions.html#/s:6Nimble7containyAA9PredicateVySSGSSd_tF":{"name":"contain(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual string contains the expected substring.</p>"},"Functions.html#/s:6Nimble7containyAA9PredicateVySSGSaySSGF":{"name":"contain(_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble7containyAA9PredicateVySo8NSStringCGAFd_tF":{"name":"contain(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual string contains the expected substring.</p>"},"Functions.html#/s:6Nimble7containyAA9PredicateVySo8NSStringCGSayAFGF":{"name":"contain(_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble7containyAA9PredicateVyAA12NMBContainer_pGypSgd_tF":{"name":"contain(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual collection contains the expected object.</p>"},"Functions.html#/s:6Nimble7containyAA9PredicateVyAA12NMBContainer_pGSayypSgGF":{"name":"contain(_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble24containElementSatisfyingyAA9PredicateVyxGSb0C0Qzc_SStSTRzlF":{"name":"containElementSatisfying(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble13elementsEqualyAA9PredicateVyxGq_SgSTRzSTR_SQ7ElementRpzAGQy_AHRSr0_lF":{"name":"elementsEqual(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual sequence and the exepected sequence contain the same elements in"},"Functions.html#/s:6Nimble13elementsEqual_2byAA9PredicateVyxGq_Sg_Sb7ElementQz_AHQy_tctSTRzSTR_r0_lF":{"name":"elementsEqual(_:by:)","abstract":"<p>A Nimble matcher that succeeds when the actual sequence and the exepected sequence contain equivalent elements in"},"Functions.html#/s:6Nimble7endWithyAA9PredicateVyxG7ElementQzSTRzSQAGRQlF":{"name":"endWith(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual sequence&rsquo;s last element"},"Functions.html#/s:6Nimble7endWithyAA9PredicateVyAA20NMBOrderedCollection_pGypF":{"name":"endWith(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual collection&rsquo;s last element"},"Functions.html#/s:6Nimble7endWithyAA9PredicateVySSGSSF":{"name":"endWith(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual string contains the expected substring"},"Functions.html#/s:6Nimble5equalyAA9PredicateVyx_q_tGx_q_tSgSQRzSQR_r0_lF":{"name":"equal(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual tuple is equal to the expected tuple."},"Functions.html#/s:6Nimble2eeoiyyAA15SyncExpectationVyx_q_tG_x_q_tSgtSQRzSQR_r0_lF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA16AsyncExpectationVyx_q_tG_x_q_tSgtSQRzSQR_r0_lF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA15SyncExpectationVyx_q_tG_x_q_tSgtSQRzSQR_r0_lF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA16AsyncExpectationVyx_q_tG_x_q_tSgtSQRzSQR_r0_lF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble5equalyAA9PredicateVyx_q_q0_tGx_q_q0_tSgSQRzSQR_SQR0_r1_lF":{"name":"equal(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual tuple is equal to the expected tuple."},"Functions.html#/s:6Nimble2eeoiyyAA15SyncExpectationVyx_q_q0_tG_x_q_q0_tSgtSQRzSQR_SQR0_r1_lF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA16AsyncExpectationVyx_q_q0_tG_x_q_q0_tSgtSQRzSQR_SQR0_r1_lF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA15SyncExpectationVyx_q_q0_tG_x_q_q0_tSgtSQRzSQR_SQR0_r1_lF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA16AsyncExpectationVyx_q_q0_tG_x_q_q0_tSgtSQRzSQR_SQR0_r1_lF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble5equalyAA9PredicateVyx_q_q0_q1_tGx_q_q0_q1_tSgSQRzSQR_SQR0_SQR1_r2_lF":{"name":"equal(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual tuple is equal to the expected tuple."},"Functions.html#/s:6Nimble2eeoiyyAA15SyncExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtSQRzSQR_SQR0_SQR1_r2_lF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA16AsyncExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtSQRzSQR_SQR0_SQR1_r2_lF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA15SyncExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtSQRzSQR_SQR0_SQR1_r2_lF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA16AsyncExpectationVyx_q_q0_q1_tG_x_q_q0_q1_tSgtSQRzSQR_SQR0_SQR1_r2_lF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble5equalyAA9PredicateVyx_q_q0_q1_q2_tGx_q_q0_q1_q2_tSgSQRzSQR_SQR0_SQR1_SQR2_r3_lF":{"name":"equal(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual tuple is equal to the expected tuple."},"Functions.html#/s:6Nimble2eeoiyyAA15SyncExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtSQRzSQR_SQR0_SQR1_SQR2_r3_lF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA16AsyncExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtSQRzSQR_SQR0_SQR1_SQR2_r3_lF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA15SyncExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtSQRzSQR_SQR0_SQR1_SQR2_r3_lF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA16AsyncExpectationVyx_q_q0_q1_q2_tG_x_q_q0_q1_q2_tSgtSQRzSQR_SQR0_SQR1_SQR2_r3_lF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble5equalyAA9PredicateVyx_q_q0_q1_q2_q3_tGx_q_q0_q1_q2_q3_tSgSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF":{"name":"equal(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual tuple is equal to the expected tuple."},"Functions.html#/s:6Nimble2eeoiyyAA15SyncExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA16AsyncExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA15SyncExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA16AsyncExpectationVyx_q_q0_q1_q2_q3_tG_x_q_q0_q1_q2_q3_tSgtSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble5equalyAA9PredicateVyxGxSQRzlF":{"name":"equal(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is equal to the expected value."},"Functions.html#/s:6Nimble5equalyAA9PredicateVySayxSgGGAFSQRzlF":{"name":"equal(_:)","abstract":"<p>A Nimble matcher allowing comparison of collection with optional type</p>"},"Functions.html#/s:6Nimble5equalyAA9PredicateVyxGxSgSQRzlF":{"name":"equal(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value is equal to the expected value."},"Functions.html#/s:6Nimble5equalyAA9PredicateVyShyxGGAESHRzlF":{"name":"equal(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual set is equal to the expected set.</p>"},"Functions.html#/s:6Nimble5equalyAA9PredicateVyShyxGGAESgSHRzlF":{"name":"equal(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual set is equal to the expected set.</p>"},"Functions.html#/s:6Nimble5equalyAA9PredicateVyShyxGGAESLRzSHRzlF":{"name":"equal(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual set is equal to the expected set.</p>"},"Functions.html#/s:6Nimble5equalyAA9PredicateVyShyxGGAESgSLRzSHRzlF":{"name":"equal(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual set is equal to the expected set.</p>"},"Functions.html#/s:6Nimble5equalyAA9PredicateVySDyxq_GGSDyxq_SgGSHRzSQR_r0_lF":{"name":"equal(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual dictionary is equal to the expected dictionary</p>"},"Functions.html#/s:6Nimble2eeoiyyAA15SyncExpectationVyxG_xtSQRzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA15SyncExpectationVyxG_xSgtSQRzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA15SyncExpectationVyxG_xtSQRzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA15SyncExpectationVyxG_xSgtSQRzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA15SyncExpectationVySayxGG_AESgtSQRzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA15SyncExpectationVySayxGG_AESgtSQRzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA15SyncExpectationVyShyxGG_AEtSHRzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA15SyncExpectationVyShyxGG_AESgtSHRzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA15SyncExpectationVyShyxGG_AEtSHRzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA15SyncExpectationVyShyxGG_AESgtSHRzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA15SyncExpectationVyShyxGG_AEtSLRzSHRzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA15SyncExpectationVyShyxGG_AESgtSLRzSHRzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA15SyncExpectationVyShyxGG_AEtSLRzSHRzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA15SyncExpectationVyShyxGG_AESgtSLRzSHRzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA15SyncExpectationVySDyxq_GG_AESgtSHRzSQR_r0_lF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA15SyncExpectationVySDyxq_GG_AESgtSHRzSQR_r0_lF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA16AsyncExpectationVyxG_xtSQRzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA16AsyncExpectationVyxG_xSgtSQRzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA16AsyncExpectationVyxG_xtSQRzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA16AsyncExpectationVyxG_xSgtSQRzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA16AsyncExpectationVySayxGG_AESgtSQRzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA16AsyncExpectationVySayxGG_AESgtSQRzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA16AsyncExpectationVyShyxGG_AEtSHRzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA16AsyncExpectationVyShyxGG_AESgtSHRzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA16AsyncExpectationVyShyxGG_AEtSHRzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA16AsyncExpectationVyShyxGG_AESgtSHRzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA16AsyncExpectationVyShyxGG_AEtSLRzSHRzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA16AsyncExpectationVyShyxGG_AESgtSLRzSHRzlF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA16AsyncExpectationVyShyxGG_AEtSLRzSHRzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA16AsyncExpectationVyShyxGG_AESgtSLRzSHRzlF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2eeoiyyAA16AsyncExpectationVySDyxq_GG_AESgtSHRzSQR_r0_lF":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble2neoiyyAA16AsyncExpectationVySDyxq_GG_AESgtSHRzSQR_r0_lF":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble9haveCountyAA9PredicateVyxGSiSlRzlF":{"name":"haveCount(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual Collection&rsquo;s count equals"},"Functions.html#/s:6Nimble9haveCountyAA9PredicateVyAA13NMBCollection_pGSiF":{"name":"haveCount(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual collection&rsquo;s count equals"},"Functions.html#/s:6Nimble5matchyAA9PredicateVySSGSSSgF":{"name":"match(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual string satisfies the regular expression"},"Functions.html#/s:6Nimble10matchErroryAA9PredicateVys0C0_pGxsAERzlF":{"name":"matchError(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual expression evaluates to an"},"Functions.html#/s:6Nimble10matchErroryAA9PredicateVys0C0_pGxSQRzsAERzlF":{"name":"matchError(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual expression evaluates to an"},"Functions.html#/s:6Nimble10matchErroryAA9PredicateVys0C0_pGxmsAERzlF":{"name":"matchError(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual expression evaluates to an"},"Functions.html#/s:6Nimble17postNotifications_4fromAA9PredicateVyxGAEySay10Foundation12NotificationVGG_So20NSNotificationCenterCtlF":{"name":"postNotifications(_:from:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble28postDistributedNotifications_4from5namesAA9PredicateVyxGAFySay10Foundation12NotificationVGG_So013NSDistributedI6CenterCShySo18NSNotificationNameaGtlF":{"name":"postDistributedNotifications(_:from:names:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble14raiseException5named6reason8userInfo7closureAA9PredicateVyxGSo15NSExceptionNameaSg_SSSgSo12NSDictionaryCSgySo0J0CcSgtlF":{"name":"raiseException(named:reason:userInfo:closure:)","abstract":"<p>A Nimble matcher that succeeds when the actual expression raises an"},"Functions.html#/s:6Nimble14raiseException5named6reason8userInfo7closureAA9PredicateVyxGSSSg_AJSo12NSDictionaryCSgySo11NSExceptionCcSgtlF":{"name":"raiseException(named:reason:userInfo:closure:)","abstract":"<p>A Nimble matcher that succeeds when the actual expression raises an"},"Functions.html#/s:6Nimble12satisfyAllOfyAA9PredicateVyxGAEd_tlF":{"name":"satisfyAllOf(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value matches with all of the matchers"},"Functions.html#/s:6Nimble12satisfyAllOfyAA9PredicateVyxGSayAEGlF":{"name":"satisfyAllOf(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value matches with all of the matchers"},"Functions.html#/s:6Nimble2aaoiyAA9PredicateVyxGAE_AEtlF":{"name":"&&(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble12satisfyAnyOfyAA9PredicateVyxGAEd_tlF":{"name":"satisfyAnyOf(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value matches with any of the matchers"},"Functions.html#/s:6Nimble12satisfyAnyOfyAA9PredicateVyxGSayAEGlF":{"name":"satisfyAnyOf(_:)","abstract":"<p>A Nimble matcher that succeeds when the actual value matches with any of the matchers"},"Functions.html#/s:6Nimble2oooiyAA9PredicateVyxGAE_AEtlF":{"name":"||(_:_:)","abstract":"<p>Undocumented</p>"},"Functions.html#/catchBadInstruction(block:)":{"name":"catchBadInstruction(block:)","abstract":"<p>Run the provided block. If a POSIX SIGILL is received, handle it and return a BadInstructionException (which is just an empty object in this POSIX signal version). Otherwise return nil."},"Functions.html#/s:6Nimble14throwAssertionAA9PredicateVyxGylF":{"name":"throwAssertion()","abstract":"<p>Undocumented</p>"},"Functions.html#/s:6Nimble10throwErrorAA9PredicateVyxGylF":{"name":"throwError()","abstract":"<p>A Nimble matcher that succeeds when the actual expression throws an"},"Functions.html#/s:6Nimble10throwError_7closureAA9PredicateVyq_Gx_ys0C0_pcSgtsAGRzr0_lF":{"name":"throwError(_:closure:)","abstract":"<p>A Nimble matcher that succeeds when the actual expression throws an"},"Functions.html#/s:6Nimble10throwError_7closureAA9PredicateVyq_Gx_yxcSgtSQRzs0C0Rzr0_lF":{"name":"throwError(_:closure:)","abstract":"<p>A Nimble matcher that succeeds when the actual expression throws an"},"Functions.html#/s:6Nimble10throwError9errorType7closureAA9PredicateVyq_Gxm_yxcSgts0C0Rzr0_lF":{"name":"throwError(errorType:closure:)","abstract":"<p>A Nimble matcher that succeeds when the actual expression throws an"},"Functions.html#/s:6Nimble10throwError7closureAA9PredicateVyxGys0C0_pc_tlF":{"name":"throwError(closure:)","abstract":"<p>A Nimble matcher that succeeds when the actual expression throws any"},"Functions.html#/s:6Nimble10throwError7closureAA9PredicateVyq_Gyxc_ts0C0Rzr0_lF":{"name":"throwError(closure:)","abstract":"<p>A Nimble matcher that succeeds when the actual expression throws any"},"Functions.html#/s:6Nimble7succeedAA9PredicateVyAA15ToSucceedResultOGyF":{"name":"succeed()","abstract":"<p>A Nimble matcher that takes in a closure for validation.</p>"},"Functions.html#/s:6Nimble9stringifyySSxSglF":{"name":"stringify(_:)","abstract":"<p>Returns a string appropriate for displaying in test output"},"Functions.html#/s:6Nimble20prettyCollectionTypeySSxlF":{"name":"prettyCollectionType(_:)","abstract":"<p>Attempts to generate a pretty type string for a given value. If the value is of a Objective-C"},"Functions.html#/s:6Nimble20prettyCollectionTypeySSxSlRzlF":{"name":"prettyCollectionType(_:)","abstract":"<p>Returns the type name for a given collection type. This overload is used by Swift"},"Extensions/Data.html#/s:10Foundation4DataV6NimbleE15testDescriptionSSvp":{"name":"testDescription","abstract":"<p>Undocumented</p>","parent_name":"Data"},"Extensions/String.html#/s:SS6NimbleE15testDescriptionSSvp":{"name":"testDescription","abstract":"<p>Undocumented</p>","parent_name":"String"},"Extensions/AnySequence.html#/s:s11AnySequenceV6NimbleE15testDescriptionSSvp":{"name":"testDescription","abstract":"<p>Undocumented</p>","parent_name":"AnySequence"},"Extensions/Array.html#/s:Sa6NimbleE15testDescriptionSSvp":{"name":"testDescription","abstract":"<p>Undocumented</p>","parent_name":"Array"},"Extensions/NSString.html#/c:@CM@Nimble@@objc(cs)NSString(im)NMB_compare:":{"name":"NMB_compare(_:)","abstract":"<p>Undocumented</p>","parent_name":"NSString"},"Extensions/NSDate.html#/s:So6NSDateC6NimbleE11doubleValueSdvp":{"name":"doubleValue","abstract":"<p>Undocumented</p>","parent_name":"NSDate"},"Extensions/NSDate.html#/s:So6NSDateC6NimbleE15testDescriptionSSvp":{"name":"testDescription","abstract":"<p>Undocumented</p>","parent_name":"NSDate"},"Extensions/Date.html#/s:10Foundation4DateV6NimbleE11doubleValueSdvp":{"name":"doubleValue","abstract":"<p>Undocumented</p>","parent_name":"Date"},"Extensions/Date.html#/s:10Foundation4DateV6NimbleE15testDescriptionSSvp":{"name":"testDescription","abstract":"<p>Undocumented</p>","parent_name":"Date"},"Extensions/NSNumber.html#/c:@CM@Nimble@@objc(cs)NSNumber(im)NMB_compare:":{"name":"NMB_compare(_:)","abstract":"<p>Undocumented</p>","parent_name":"NSNumber"},"Extensions/NSNumber.html#/s:So8NSNumberC6NimbleE15testDescriptionSSvp":{"name":"testDescription","abstract":"<p>Undocumented</p>","parent_name":"NSNumber"},"Extensions/NSIndexSet.html#/s:So10NSIndexSetC6NimbleE15testDescriptionSSvp":{"name":"testDescription","abstract":"<p>Undocumented</p>","parent_name":"NSIndexSet"},"Extensions/NSArray.html#/s:So7NSArrayC6NimbleE15testDescriptionSSvp":{"name":"testDescription","abstract":"<p>Undocumented</p>","parent_name":"NSArray"},"Extensions/UInt.html#/s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc":{"name":"init(booleanLiteral:)","parent_name":"UInt"},"Extensions/Int.html#/s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc":{"name":"init(booleanLiteral:)","parent_name":"Int"},"Extensions/Double.html#/s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc":{"name":"init(booleanLiteral:)","parent_name":"Double"},"Extensions/Double.html#/s:Sd6NimbleE15testDescriptionSSvp":{"name":"testDescription","abstract":"<p>Undocumented</p>","parent_name":"Double"},"Extensions/Float.html#/s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc":{"name":"init(booleanLiteral:)","parent_name":"Float"},"Extensions/Float.html#/s:Sf6NimbleE15testDescriptionSSvp":{"name":"testDescription","abstract":"<p>Undocumented</p>","parent_name":"Float"},"Extensions/UInt64.html#/s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc":{"name":"init(booleanLiteral:)","parent_name":"UInt64"},"Extensions/Int64.html#/s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc":{"name":"init(booleanLiteral:)","parent_name":"Int64"},"Extensions/UInt32.html#/s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc":{"name":"init(booleanLiteral:)","parent_name":"UInt32"},"Extensions/Int32.html#/s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc":{"name":"init(booleanLiteral:)","parent_name":"Int32"},"Extensions/UInt16.html#/s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc":{"name":"init(booleanLiteral:)","parent_name":"UInt16"},"Extensions/Int16.html#/s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc":{"name":"init(booleanLiteral:)","parent_name":"Int16"},"Extensions/UInt8.html#/s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc":{"name":"init(booleanLiteral:)","parent_name":"UInt8"},"Extensions/Int8.html#/s:s27ExpressibleByBooleanLiteralP07booleanD0x0cD4TypeQz_tcfc":{"name":"init(booleanLiteral:)","parent_name":"Int8"},"Extensions/NSException.html#/s:So11NSExceptionC6NimbleE14catchException2inABXDSgyyc_tFZ":{"name":"catchException(in:)","abstract":"<p>Undocumented</p>","parent_name":"NSException"},"Extensions/NSException.html":{"name":"NSException"},"Extensions/Int8.html":{"name":"Int8"},"Extensions/UInt8.html":{"name":"UInt8"},"Extensions/Int16.html":{"name":"Int16"},"Extensions/UInt16.html":{"name":"UInt16"},"Extensions/Int32.html":{"name":"Int32"},"Extensions/UInt32.html":{"name":"UInt32"},"Extensions/Int64.html":{"name":"Int64"},"Extensions/UInt64.html":{"name":"UInt64"},"Extensions/Float.html":{"name":"Float"},"Extensions/Double.html":{"name":"Double"},"Extensions/Int.html":{"name":"Int"},"Extensions/UInt.html":{"name":"UInt"},"Extensions/NSArray.html":{"name":"NSArray"},"Extensions.html#/c:objc(cs)NSSet":{"name":"NSSet"},"Extensions.html#/c:objc(cs)NSHashTable":{"name":"NSHashTable"},"Extensions.html#/c:objc(cs)NSMapTable":{"name":"NSMapTable"},"Extensions/NSIndexSet.html":{"name":"NSIndexSet"},"Extensions.html#/c:objc(cs)NSDictionary":{"name":"NSDictionary"},"Extensions/NSNumber.html":{"name":"NSNumber"},"Extensions/Date.html":{"name":"Date"},"Extensions/NSDate.html":{"name":"NSDate"},"Extensions/NSString.html":{"name":"NSString"},"Extensions/Array.html":{"name":"Array"},"Extensions/AnySequence.html":{"name":"AnySequence"},"Extensions/String.html":{"name":"String"},"Extensions/Data.html":{"name":"Data"},"Enums/ToSucceedResult.html#/s:6Nimble15ToSucceedResultO9succeededyA2CmF":{"name":"succeeded","abstract":"<p>Undocumented</p>","parent_name":"ToSucceedResult"},"Enums/ToSucceedResult.html#/s:6Nimble15ToSucceedResultO6failedyACSS_tcACmF":{"name":"failed(reason:)","abstract":"<p>Undocumented</p>","parent_name":"ToSucceedResult"},"Enums/PredicateStatus.html#/s:6Nimble15PredicateStatusO7matchesyA2CmF":{"name":"matches","abstract":"<p>Matches indicates if the predicate / matcher passes with the given value</p>","parent_name":"PredicateStatus"},"Enums/PredicateStatus.html#/s:6Nimble15PredicateStatusO12doesNotMatchyA2CmF":{"name":"doesNotMatch","abstract":"<p>DoesNotMatch indicates if the predicate / matcher fails with the given value, but <em>would</em>","parent_name":"PredicateStatus"},"Enums/PredicateStatus.html#/s:6Nimble15PredicateStatusO4failyA2CmF":{"name":"fail","abstract":"<p>Fail indicates the predicate will never satisfy with the given value in any case.","parent_name":"PredicateStatus"},"Enums/PredicateStatus.html#/s:6Nimble15PredicateStatusO4boolACSb_tcfc":{"name":"init(bool:)","abstract":"<p>Converts a boolean to either .matches (if true) or .doesNotMatch (if false).</p>","parent_name":"PredicateStatus"},"Enums/PredicateStatus.html#/s:6Nimble15PredicateStatusO12toObjectiveCAA012NMBPredicateC0CyF":{"name":"toObjectiveC()","abstract":"<p>Undocumented</p>","parent_name":"PredicateStatus"},"Enums/ExpectationStyle.html#/s:6Nimble16ExpectationStyleO7toMatchyA2CmF":{"name":"toMatch","abstract":"<p>Undocumented</p>","parent_name":"ExpectationStyle"},"Enums/ExpectationStyle.html#/s:6Nimble16ExpectationStyleO10toNotMatchyA2CmF":{"name":"toNotMatch","abstract":"<p>Undocumented</p>","parent_name":"ExpectationStyle"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO21expectedActualValueToyACSScACmF":{"name":"expectedActualValueTo(_:)","abstract":"<p>includes actual value in output (&ldquo;expected to <message>, got <actual>&rdquo;)</p>","parent_name":"ExpectationMessage"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO21expectedCustomValueToyACSS_SStcACmF":{"name":"expectedCustomValueTo(_:actual:)","abstract":"<p>uses a custom actual value string in output (&ldquo;expected to <message>, got <actual>&rdquo;)</p>","parent_name":"ExpectationMessage"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO10expectedToyACSScACmF":{"name":"expectedTo(_:)","abstract":"<p>excludes actual value in output (&ldquo;expected to <message>&rdquo;)</p>","parent_name":"ExpectationMessage"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO4failyACSScACmF":{"name":"fail(_:)","abstract":"<p>allows any free-form message (&ldquo;<message>&rdquo;)</p>","parent_name":"ExpectationMessage"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO8prependsyACSS_ACtcACmF":{"name":"prepends(_:_:)","abstract":"<p>Not Fully Implemented Yet.</p>","parent_name":"ExpectationMessage"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO7appendsyA2C_SStcACmF":{"name":"appends(_:_:)","abstract":"<p>appends after an existing message (&ldquo;<expectation> (use beNil() to match nils)&rdquo;)</p>","parent_name":"ExpectationMessage"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO7detailsyA2C_SStcACmF":{"name":"details(_:_:)","abstract":"<p>provides long-form multi-line explainations (&ldquo;<expectation>\\n\\n<string>&rdquo;)</p>","parent_name":"ExpectationMessage"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO08expectedC0SSvp":{"name":"expectedMessage","abstract":"<p>Returns the smallest message after the &ldquo;expected to&rdquo; string that summarizes the error.</p>","parent_name":"ExpectationMessage"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO8appended7messageACSS_tF":{"name":"appended(message:)","abstract":"<p>Appends a message after the primary expectation message</p>","parent_name":"ExpectationMessage"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO17appendedBeNilHintACyF":{"name":"appendedBeNilHint()","abstract":"<p>Appends a message hinting to use beNil() for when the actual value given was nil.</p>","parent_name":"ExpectationMessage"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO8appended7detailsACSS_tF":{"name":"appended(details:)","abstract":"<p>Appends a detailed (aka - multiline) message after the primary expectation message","parent_name":"ExpectationMessage"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO08replacedB0yA3CcF":{"name":"replacedExpectation(_:)","abstract":"<p>Replaces a primary expectation with one returned by f. Preserves all composite expectations","parent_name":"ExpectationMessage"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO07wrappedB06before5afterACSS_SStF":{"name":"wrappedExpectation(before:after:)","abstract":"<p>Wraps a primary expectation with text before and after it.","parent_name":"ExpectationMessage"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO9prepended11expectationACSS_tF":{"name":"prepended(expectation:)","abstract":"<p>Prepends a message by modifying the primary expectation</p>","parent_name":"ExpectationMessage"},"Enums/ExpectationMessage.html#/s:6Nimble18ExpectationMessageO8toString6actual8expected0D0S2S_S2StF":{"name":"toString(actual:expected:to:)","abstract":"<p>Converts the tree of ExpectationMessages into a final built string.</p>","parent_name":"ExpectationMessage"},"Enums/ExpectationStatus.html#/s:6Nimble17ExpectationStatusO7pendingyA2CmF":{"name":"pending","abstract":"<p>No predicates have been performed.</p>","parent_name":"ExpectationStatus"},"Enums/ExpectationStatus.html#/s:6Nimble17ExpectationStatusO6passedyA2CmF":{"name":"passed","abstract":"<p>All predicates have passed.</p>","parent_name":"ExpectationStatus"},"Enums/ExpectationStatus.html#/s:6Nimble17ExpectationStatusO6failedyA2CmF":{"name":"failed","abstract":"<p>All predicates have failed.</p>","parent_name":"ExpectationStatus"},"Enums/ExpectationStatus.html#/s:6Nimble17ExpectationStatusO5mixedyA2CmF":{"name":"mixed","abstract":"<p>Multiple predicates have been peformed, with at least one passing and one failing.</p>","parent_name":"ExpectationStatus"},"Enums/ExpectationStatus.html":{"name":"ExpectationStatus","abstract":"<p>Undocumented</p>"},"Enums/ExpectationMessage.html":{"name":"ExpectationMessage","abstract":"<p>Undocumented</p>"},"Enums/ExpectationStyle.html":{"name":"ExpectationStyle","abstract":"<p>Undocumented</p>"},"Enums/PredicateStatus.html":{"name":"PredicateStatus","abstract":"<p>PredicateStatus is a trinary that indicates if a Predicate matches a given value or not</p>"},"Enums/ToSucceedResult.html":{"name":"ToSucceedResult","abstract":"<p>Used by the <code>succeed</code> matcher.</p>"},"Global%20Variables.html#/s:6Nimble23MACH_MSG_TYPE_MAKE_SENDs6UInt32Vvp":{"name":"MACH_MSG_TYPE_MAKE_SEND","abstract":"<p>Undocumented</p>"},"Global%20Variables.html#/nativeThreadState":{"name":"nativeThreadState"},"Global%20Variables.html#/nativeThreadStateCount":{"name":"nativeThreadStateCount"},"Global%20Variables.html#/nativeMachExceptionMask":{"name":"nativeMachExceptionMask"},"Global%20Variables.html#/s:6Nimble17nativeThreadStates5Int32Vvp":{"name":"nativeThreadState","abstract":"<p>Undocumented</p>"},"Global%20Variables.html#/s:6Nimble22nativeThreadStateCounts6UInt32Vvp":{"name":"nativeThreadStateCount","abstract":"<p>Undocumented</p>"},"Global%20Variables.html#/s:6Nimble23nativeMachExceptionMasks6UInt32Vvp":{"name":"nativeMachExceptionMask","abstract":"<p>Undocumented</p>"},"Global%20Variables.html#/s:6Nimble15EXC_TYPES_COUNTSivp":{"name":"EXC_TYPES_COUNT","abstract":"<p>Undocumented</p>"},"Global%20Variables.html#/s:6Nimble0A16AssertionHandlerAA0bC0_pvp":{"name":"NimbleAssertionHandler","abstract":"<p>Global backing interface for assertions that Nimble creates."},"Global%20Variables.html#/s:6Nimble12DefaultDeltaSdvp":{"name":"DefaultDelta","abstract":"<p>Undocumented</p>"},"Classes/NMBStringer.html#/c:@M@Nimble@objc(cs)NMBStringer(cm)stringify:":{"name":"stringify(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBStringer"},"Classes/SourceLocation.html#/s:6Nimble14SourceLocationC4fileSSvp":{"name":"file","abstract":"<p>Undocumented</p>","parent_name":"SourceLocation"},"Classes/SourceLocation.html#/s:6Nimble14SourceLocationC4lineSuvp":{"name":"line","abstract":"<p>Undocumented</p>","parent_name":"SourceLocation"},"Classes/SourceLocation.html#/c:@M@Nimble@objc(cs)SourceLocation(py)description":{"name":"description","abstract":"<p>Undocumented</p>","parent_name":"SourceLocation"},"Classes/NMBObjCRaiseExceptionPredicate.html#/c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(py)named":{"name":"named","abstract":"<p>Undocumented</p>","parent_name":"NMBObjCRaiseExceptionPredicate"},"Classes/NMBObjCRaiseExceptionPredicate.html#/c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(py)reason":{"name":"reason","abstract":"<p>Undocumented</p>","parent_name":"NMBObjCRaiseExceptionPredicate"},"Classes/NMBObjCRaiseExceptionPredicate.html#/c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(py)userInfo":{"name":"userInfo","abstract":"<p>Undocumented</p>","parent_name":"NMBObjCRaiseExceptionPredicate"},"Classes/NMBObjCRaiseExceptionPredicate.html#/c:@M@Nimble@objc(cs)NMBObjCRaiseExceptionPredicate(py)satisfyingBlock":{"name":"satisfyingBlock","abstract":"<p>Undocumented</p>","parent_name":"NMBObjCRaiseExceptionPredicate"},"Classes/NMBPredicateStatus.html#/s:6Nimble18NMBPredicateStatusC7matchesACvpZ":{"name":"matches","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicateStatus"},"Classes/NMBPredicateStatus.html#/s:6Nimble18NMBPredicateStatusC12doesNotMatchACvpZ":{"name":"doesNotMatch","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicateStatus"},"Classes/NMBPredicateStatus.html#/s:6Nimble18NMBPredicateStatusC4failACvpZ":{"name":"fail","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicateStatus"},"Classes/NMBPredicateStatus.html#/c:@M@Nimble@objc(cs)NMBPredicateStatus(py)hash":{"name":"hash","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicateStatus"},"Classes/NMBPredicateStatus.html#/c:@M@Nimble@objc(cs)NMBPredicateStatus(im)isEqual:":{"name":"isEqual(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicateStatus"},"Classes/NMBPredicateStatus.html#/s:6Nimble18NMBPredicateStatusC4from6statusAcA09PredicateC0O_tFZ":{"name":"from(status:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicateStatus"},"Classes/NMBPredicateStatus.html#/s:6Nimble18NMBPredicateStatusC4from4boolACSb_tFZ":{"name":"from(bool:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicateStatus"},"Classes/NMBPredicateStatus.html#/s:6Nimble18NMBPredicateStatusC7toSwiftAA09PredicateC0OyF":{"name":"toSwift()","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicateStatus"},"Classes/NMBPredicateResult.html#/s:6Nimble18NMBPredicateResultC6statusAA0B6StatusCvp":{"name":"status","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicateResult"},"Classes/NMBPredicateResult.html#/s:6Nimble18NMBPredicateResultC7messageAA21NMBExpectationMessageCvp":{"name":"message","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicateResult"},"Classes/NMBPredicateResult.html#/s:6Nimble18NMBPredicateResultC6status7messageAcA0B6StatusC_AA21NMBExpectationMessageCtcfc":{"name":"init(status:message:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicateResult"},"Classes/NMBPredicateResult.html#/s:6Nimble18NMBPredicateResultC4bool7messageACSb_AA21NMBExpectationMessageCtcfc":{"name":"init(bool:message:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicateResult"},"Classes/NMBPredicateResult.html#/s:6Nimble18NMBPredicateResultC7toSwiftAA09PredicateC0VyF":{"name":"toSwift()","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicateResult"},"Classes/NMBObjCBeCloseToPredicate.html#/c:@M@Nimble@objc(cs)NMBObjCBeCloseToPredicate(py)within":{"name":"within","abstract":"<p>Undocumented</p>","parent_name":"NMBObjCBeCloseToPredicate"},"Classes/NMBPredicate.html#/s:6Nimble12NMBPredicateC9predicateAcA0B6ResultCAA10ExpressionVySo8NSObjectCGKc_tcfc":{"name":"init(predicate:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)allPassMatcher:":{"name":"allPassMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beAKindOfMatcher:":{"name":"beAKindOfMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beAnInstanceOfMatcher:":{"name":"beAnInstanceOfMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beCloseToMatcher:within:":{"name":"beCloseToMatcher(_:within:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beEmptyMatcher":{"name":"beEmptyMatcher()","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beGreaterThanMatcher:":{"name":"beGreaterThanMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beGreaterThanOrEqualToMatcher:":{"name":"beGreaterThanOrEqualToMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beIdenticalToMatcher:":{"name":"beIdenticalToMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beLessThanMatcher:":{"name":"beLessThanMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beLessThanOrEqualToMatcher:":{"name":"beLessThanOrEqualToMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beTruthyMatcher":{"name":"beTruthyMatcher()","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beFalsyMatcher":{"name":"beFalsyMatcher()","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beTrueMatcher":{"name":"beTrueMatcher()","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beFalseMatcher":{"name":"beFalseMatcher()","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beNilMatcher":{"name":"beNilMatcher()","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)beginWithMatcher:":{"name":"beginWithMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)containMatcher:":{"name":"containMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)containElementSatisfyingMatcher:":{"name":"containElementSatisfyingMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)endWithMatcher:":{"name":"endWithMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)equalMatcher:":{"name":"equalMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)haveCountMatcher:":{"name":"haveCountMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)matchMatcher:":{"name":"matchMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)raiseExceptionMatcher":{"name":"raiseExceptionMatcher()","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)satisfyAllOfMatcher:":{"name":"satisfyAllOfMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/NMBPredicate.html#/c:@CM@Nimble@objc(cs)NMBPredicate(cm)satisfyAnyOfMatcher:":{"name":"satisfyAnyOfMatcher(_:)","abstract":"<p>Undocumented</p>","parent_name":"NMBPredicate"},"Classes/FailureMessage.html#/s:6Nimble14FailureMessageC8expectedSSvp":{"name":"expected","abstract":"<p>Undocumented</p>","parent_name":"FailureMessage"},"Classes/FailureMessage.html#/s:6Nimble14FailureMessageC11actualValueSSSgvp":{"name":"actualValue","abstract":"<p>Undocumented</p>","parent_name":"FailureMessage"},"Classes/FailureMessage.html#/s:6Nimble14FailureMessageC2toSSvp":{"name":"to","abstract":"<p>Undocumented</p>","parent_name":"FailureMessage"},"Classes/FailureMessage.html#/s:6Nimble14FailureMessageC07postfixC0SSvp":{"name":"postfixMessage","abstract":"<p>Undocumented</p>","parent_name":"FailureMessage"},"Classes/FailureMessage.html#/s:6Nimble14FailureMessageC13postfixActualSSvp":{"name":"postfixActual","abstract":"<p>Undocumented</p>","parent_name":"FailureMessage"},"Classes/FailureMessage.html#/s:6Nimble14FailureMessageC08extendedC0SSSgvp":{"name":"extendedMessage","abstract":"<p>An optional message that will be appended as a new line and provides additional details","parent_name":"FailureMessage"},"Classes/FailureMessage.html#/s:6Nimble14FailureMessageC15userDescriptionSSSgvp":{"name":"userDescription","abstract":"<p>Undocumented</p>","parent_name":"FailureMessage"},"Classes/FailureMessage.html#/s:6Nimble14FailureMessageC11stringValueSSvp":{"name":"stringValue","abstract":"<p>Undocumented</p>","parent_name":"FailureMessage"},"Classes/FailureMessage.html#/c:@M@Nimble@objc(cs)FailureMessage(im)init":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"FailureMessage"},"Classes/FailureMessage.html#/s:6Nimble14FailureMessageC11stringValueACSS_tcfc":{"name":"init(stringValue:)","abstract":"<p>Undocumented</p>","parent_name":"FailureMessage"},"Classes/NMBExpectationMessage.html#/s:6Nimble21NMBExpectationMessageC10expectedToACSS_tcfc":{"name":"init(expectedTo:)","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectationMessage"},"Classes/NMBExpectationMessage.html#/s:6Nimble21NMBExpectationMessageC21expectedActualValueToACSS_tcfc":{"name":"init(expectedActualValueTo:)","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectationMessage"},"Classes/NMBExpectationMessage.html#/s:6Nimble21NMBExpectationMessageC21expectedActualValueTo06customeF0ACSS_SStcfc":{"name":"init(expectedActualValueTo:customActualValue:)","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectationMessage"},"Classes/NMBExpectationMessage.html#/s:6Nimble21NMBExpectationMessageC4failACSS_tcfc":{"name":"init(fail:)","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectationMessage"},"Classes/NMBExpectationMessage.html#/s:6Nimble21NMBExpectationMessageC7prepend5childACSS_ACtcfc":{"name":"init(prepend:child:)","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectationMessage"},"Classes/NMBExpectationMessage.html#/s:6Nimble21NMBExpectationMessageC08appendedC05childACSS_ACtcfc":{"name":"init(appendedMessage:child:)","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectationMessage"},"Classes/NMBExpectationMessage.html#/s:6Nimble21NMBExpectationMessageC09prependedC05childACSS_ACtcfc":{"name":"init(prependedMessage:child:)","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectationMessage"},"Classes/NMBExpectationMessage.html#/s:6Nimble21NMBExpectationMessageC7details5childACSS_ACtcfc":{"name":"init(details:child:)","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectationMessage"},"Classes/NMBExpectationMessage.html#/s:6Nimble21NMBExpectationMessageC17appendedBeNilHintACyF":{"name":"appendedBeNilHint()","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectationMessage"},"Classes/NMBExpectationMessage.html#/s:6Nimble21NMBExpectationMessageC7toSwiftAA011ExpectationC0OyF":{"name":"toSwift()","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectationMessage"},"Classes/NimbleShortXCTestHandler.html#/s:6Nimble0A18ShortXCTestHandlerC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF":{"name":"assert(_:message:location:)","abstract":"<p>Undocumented</p>","parent_name":"NimbleShortXCTestHandler"},"Classes/NimbleXCTestHandler.html#/s:6Nimble0A13XCTestHandlerC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF":{"name":"assert(_:message:location:)","abstract":"<p>Undocumented</p>","parent_name":"NimbleXCTestHandler"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(im)initWithActualBlock:negative:file:line:":{"name":"init(actualBlock:negative:file:line:)","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)withTimeout":{"name":"withTimeout","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)to":{"name":"to","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)toWithDescription":{"name":"toWithDescription","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)toNot":{"name":"toNot","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)toNotWithDescription":{"name":"toNotWithDescription","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)notTo":{"name":"notTo","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)notToWithDescription":{"name":"notToWithDescription","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)toEventually":{"name":"toEventually","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)toEventuallyWithDescription":{"name":"toEventuallyWithDescription","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)toEventuallyNot":{"name":"toEventuallyNot","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)toEventuallyNotWithDescription":{"name":"toEventuallyNotWithDescription","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)toNotEventually":{"name":"toNotEventually","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)toNotEventuallyWithDescription":{"name":"toNotEventuallyWithDescription","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)toNever":{"name":"toNever","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)toNeverWithDescription":{"name":"toNeverWithDescription","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)neverTo":{"name":"neverTo","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)neverToWithDescription":{"name":"neverToWithDescription","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)toAlways":{"name":"toAlways","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)toAlwaysWithDescription":{"name":"toAlwaysWithDescription","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)alwaysTo":{"name":"alwaysTo","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(py)alwaysToWithDescription":{"name":"alwaysToWithDescription","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/NMBExpectation.html#/c:@M@Nimble@objc(cs)NMBExpectation(cm)failWithMessage:file:line:":{"name":"failWithMessage(_:file:line:)","abstract":"<p>Undocumented</p>","parent_name":"NMBExpectation"},"Classes/AssertionRecorder.html#/s:6Nimble17AssertionRecorderC10assertionsSayAA0B6RecordVGvp":{"name":"assertions","abstract":"<p>All the assertions that were captured by this recorder</p>","parent_name":"AssertionRecorder"},"Classes/AssertionRecorder.html#/s:6Nimble17AssertionRecorderCACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"AssertionRecorder"},"Classes/AssertionRecorder.html#/s:6Nimble17AssertionRecorderC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF":{"name":"assert(_:message:location:)","abstract":"<p>Undocumented</p>","parent_name":"AssertionRecorder"},"Classes/AssertionDispatcher.html#/s:6Nimble19AssertionDispatcherC8handlersACSayAA0B7Handler_pG_tcfc":{"name":"init(handlers:)","abstract":"<p>Undocumented</p>","parent_name":"AssertionDispatcher"},"Classes/AssertionDispatcher.html#/s:6Nimble19AssertionDispatcherC6assert_7message8locationySb_AA14FailureMessageCAA14SourceLocationCtF":{"name":"assert(_:message:location:)","abstract":"<p>Undocumented</p>","parent_name":"AssertionDispatcher"},"Classes/BadInstructionException.html#/c:@M@Nimble@objc(cs)BadInstructionException(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Undocumented</p>","parent_name":"BadInstructionException"},"Classes/BadInstructionException.html#/c:@M@Nimble@objc(cs)BadInstructionException(cm)receiveReply:":{"name":"receiveReply(_:)","abstract":"<p>An Objective-C callable function, invoked from the <code>mach_exc_server</code> callback function <code>catch_mach_exception_raise_state</code> to push the <code>raiseBadInstructionException</code> function onto the stack.</p>","parent_name":"BadInstructionException"},"Classes/BadInstructionException.html":{"name":"BadInstructionException","abstract":"<p>A simple NSException subclass. It&rsquo;s not required to subclass NSException (since the exception type is represented in the name) but this helps for identifying the exception through runtime type.</p>"},"Classes/AssertionDispatcher.html":{"name":"AssertionDispatcher","abstract":"<p>AssertionDispatcher allows multiple AssertionHandlers to receive"},"Classes/AssertionRecorder.html":{"name":"AssertionRecorder","abstract":"<p>An AssertionHandler that silently records assertions that Nimble makes."},"Classes/NMBExpectation.html":{"name":"NMBExpectation","abstract":"<p>Undocumented</p>"},"Classes/NimbleXCTestHandler.html":{"name":"NimbleXCTestHandler","abstract":"<p>Default handler for Nimble. This assertion handler passes failures along to"},"Classes/NimbleShortXCTestHandler.html":{"name":"NimbleShortXCTestHandler","abstract":"<p>Alternative handler for Nimble. This assertion handler passes failures along"},"Classes/NMBExpectationMessage.html":{"name":"NMBExpectationMessage","abstract":"<p>Undocumented</p>"},"Classes/FailureMessage.html":{"name":"FailureMessage","abstract":"<p>Encapsulates the failure message that matchers can report to the end user.</p>"},"Classes/NMBPredicate.html":{"name":"NMBPredicate","abstract":"<p>Undocumented</p>"},"Classes/NMBObjCBeCloseToPredicate.html":{"name":"NMBObjCBeCloseToPredicate","abstract":"<p>Undocumented</p>"},"Classes/NMBPredicateResult.html":{"name":"NMBPredicateResult","abstract":"<p>Undocumented</p>"},"Classes/NMBPredicateStatus.html":{"name":"NMBPredicateStatus","abstract":"<p>Undocumented</p>"},"Classes/NMBObjCRaiseExceptionPredicate.html":{"name":"NMBObjCRaiseExceptionPredicate","abstract":"<p>Undocumented</p>"},"Classes.html#/BadInstructionException":{"name":"BadInstructionException","abstract":"<p>Without Mach exceptions or the Objective-C runtime, there&rsquo;s nothing to put in the exception object. It&rsquo;s really just a boolean – either a SIGILL was caught or not.</p>"},"Classes/SourceLocation.html":{"name":"SourceLocation","abstract":"<p>Undocumented</p>"},"Classes/NMBStringer.html":{"name":"NMBStringer","abstract":"<p>Undocumented</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global%20Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}